{"version":3,"sources":["webpack:///./src/templates/Blog.tsx"],"names":["BlogPage","pageContext","data","currentPage","totalPages","edges","allMarkdownRemark","isPostSEO","title","SiteConfig","siteTitle","xs","flexDirection","map","post","key","node","fields","slug","frontmatter","date","excerpt","timeToRead","category","banner","url","BlogQuery"],"mappings":"yPAmBaA,EAAW,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,KAC9BC,EAA4BF,EAA5BE,YAAaC,EAAeH,EAAfG,WACbC,EAAUH,EAAKI,kBAAfD,MAER,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKE,WAAW,IAChB,YAAC,IAAD,CAAQC,MAAK,WAAaC,IAAWC,YACrC,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,GAAI,IACP,YAAC,IAAD,KACE,YAAC,IAAD,SAIN,YAAC,IAAD,CAAKC,cAAc,UAChBP,EAAMQ,KAAI,SAACC,GAAD,OACT,YAAC,IAAD,CAAKH,GAAI,GAAII,IAAKD,EAAKE,KAAKC,OAAOC,MACjC,YAAC,IAAD,CACEV,MAAOM,EAAKE,KAAKG,YAAYX,MAC7BY,KAAMN,EAAKE,KAAKG,YAAYC,KAC5BC,QAASP,EAAKE,KAAKK,QACnBC,WAAYR,EAAKE,KAAKM,WACtBJ,KAAMJ,EAAKE,KAAKC,OAAOC,KACvBK,SAAUT,EAAKE,KAAKG,YAAYI,SAChCC,OAAQV,EAAKE,KAAKG,YAAYK,cAKtC,YAAC,IAAD,KACE,YAAC,IAAD,CAAKb,GAAI,IACP,YAAC,IAAD,CAAYR,YAAaA,EAAaC,WAAYA,EAAYqB,IAAK,kBAQlEC,EAAY,aA6BV1B","file":"component---src-templates-blog-tsx-a9e4c9c5541441647396.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Col, Container, Row } from '@seolhun/localize-components';\n\nimport { Article, Pagination, PostHeader, SEO } from '@/components';\nimport { Layout, Profile } from '@/containers';\nimport Data from '@/models/Data';\nimport SiteConfig from 'config/SiteConfig';\n\ninterface Props {\n  data: Data;\n  pageContext: {\n    currentPage: number;\n    totalPages: number;\n  };\n}\n\nexport const BlogPage = ({ pageContext, data }: Props) => {\n  const { currentPage, totalPages } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <Layout>\n      <SEO isPostSEO={false} />\n      <Helmet title={`Blogs | ${SiteConfig.siteTitle}`} />\n      <Container>\n        <Row>\n          <Col xs={24}>\n            <PostHeader>\n              <Profile />\n            </PostHeader>\n          </Col>\n        </Row>\n        <Row flexDirection='column'>\n          {edges.map((post) => (\n            <Col xs={24} key={post.node.fields.slug}>\n              <Article\n                title={post.node.frontmatter.title}\n                date={post.node.frontmatter.date}\n                excerpt={post.node.excerpt}\n                timeToRead={post.node.timeToRead}\n                slug={post.node.fields.slug}\n                category={post.node.frontmatter.category}\n                banner={post.node.frontmatter.banner}\n              />\n            </Col>\n          ))}\n        </Row>\n        <Row>\n          <Col xs={24}>\n            <Pagination currentPage={currentPage} totalPages={totalPages} url={'contents'} />\n          </Col>\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nexport const BlogQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { date: { lt: \"2019-09-30T00:00:00.000Z\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            category\n            tags\n            banner\n          }\n          excerpt(pruneLength: 165)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n"],"sourceRoot":""}