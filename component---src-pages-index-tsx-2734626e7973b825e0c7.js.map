{"version":3,"sources":["webpack:///./src/views/HomeView.tsx","webpack:///./src/views/LatestContentsView.tsx","webpack:///./src/pages/index.tsx"],"names":["query","HomeView","render","id","LatestQuery","LatestContentsView","allMarkdownRemark","t","useTranslation","verticalAlign","type","weight","css","items","edges","map","node","data-aos","xs","to","IndexQuery","IndexPage","title","config","siteTitle"],"mappings":"wLAqBMA,EAAQ,aAQCC,EAtBE,WACf,OACE,YAAC,cAAD,CACED,MAAOA,EACPE,OAAQ,kBACN,YAAC,IAAD,CAAYC,GAAG,YACb,YAAC,IAAD,MACA,YAAC,IAAD,QALN,U,uJCkCSC,EAAc,aA4BZC,EA5DY,WACzB,OACE,YAAC,cAAD,CACEL,MAAOI,EACPF,OAAQ,YAA2B,IAAxBI,EAAwB,EAAxBA,kBACDC,EAAMC,cAAND,EACR,OACE,YAAC,IAAD,CAAYJ,GAAG,UAAUM,cAAc,cACrC,YAAC,IAAD,CAAMC,KAAK,KAAKC,OAAQ,IAAKC,IAAG,GAC7BL,EAAE,kBAEL,YAAC,IAAD,CACEM,MAAOP,EAAkBQ,MAAMC,KAAI,YAAoB,IAAjBC,EAAiB,EAAjBA,KACpC,wBACKA,QAIT,YAAC,IAAD,CAAKC,WAAS,UAAUL,IAAG,GACzB,YAAC,IAAD,CAAKM,GAAI,IACP,YAAC,IAAD,KACE,YAAC,OAAD,CAAMC,GAAI,aAAcZ,EAAE,yBAnBxC,U,2CCHJ,IAUaa,EAAa,aAqBXC,UA/BG,WAChB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAQC,MAAOC,IAAOC,YACtB,YAAC,EAAD,MACA,YAAC,EAAD,S","file":"component---src-pages-index-tsx-2734626e7973b825e0c7.js","sourcesContent":["import { StaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport { AOSSection } from '@/components';\nimport { BackgroundCanvas } from '@/containers';\nimport { HomeContainer } from '@/containers/home';\n\nconst HomeView = () => {\n  return (\n    <StaticQuery\n      query={query}\n      render={() => (\n        <AOSSection id='HomeView'>\n          <BackgroundCanvas />\n          <HomeContainer />\n        </AOSSection>\n      )}\n    />\n  );\n};\n\nconst query = graphql`\n  query HomeViewQuery {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD\")\n    }\n  }\n`;\n\nexport default HomeView;\n","import { Link, StaticQuery } from 'gatsby';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Col, Row } from '@seolhun/localize-components';\nimport { Button, Typo } from '@seolhun/localize-components-atomic';\n\nimport AOSSection from '@/components/aos';\nimport { ContentItemList } from '@/containers/content';\nimport { Edge } from '@/models';\n\nconst LatestContentsView = () => {\n  return (\n    <StaticQuery\n      query={LatestQuery}\n      render={({ allMarkdownRemark }) => {\n        const { t } = useTranslation();\n        return (\n          <AOSSection id='Lastest' verticalAlign='flex-start'>\n            <Typo type='h1' weight={600} css={{ marginBottom: '50px' }}>\n              {t('content:title')}\n            </Typo>\n            <ContentItemList\n              items={allMarkdownRemark.edges.map(({ node }: Edge) => {\n                return {\n                  ...node,\n                };\n              })}\n            />\n            <Row data-aos='fade-up' css={{ marginTop: '30px' }}>\n              <Col xs={24}>\n                <Button>\n                  <Link to={'/contents'}>{t('common:readMore')}</Link>\n                </Button>\n              </Col>\n            </Row>\n          </AOSSection>\n        );\n      }}\n    />\n  );\n};\n\nexport const LatestQuery = graphql`\n  query($skip: Int = 0, $limit: Int = 5) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            category\n            tags\n            banner\n          }\n          excerpt(pruneLength: 200)\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default LatestContentsView;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Layout } from '@/containers';\nimport config from 'config/SiteConfig';\n\nimport HomeView from '@/views/HomeView';\nimport LatestContentsView from '@/views/LatestContentsView';\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <Helmet title={config.siteTitle} />\n      <HomeView />\n      <LatestContentsView />\n    </Layout>\n  );\n};\n\nexport const IndexQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: 1) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY.MM.DD\")\n            category\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"sourceRoot":""}