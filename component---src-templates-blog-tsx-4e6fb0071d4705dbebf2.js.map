{"version":3,"sources":["webpack:///./src/templates/Blog.tsx"],"names":["BlogPage","pageContext","data","currentPage","totalPages","edges","allMarkdownRemark","isPostSEO","title","siteMetadata","siteTitle","map","post","key","node","fields","slug","date","frontmatter","excerpt","timeToRead","banner","category","subTitle","url","BlogQuery"],"mappings":"2FACA,yLAwBaA,EAAW,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,KAC9BC,EAA4BF,EAA5BE,YAAaC,EAAeH,EAAfG,WACbC,EAAUH,EAAKI,kBAAfD,MAER,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKE,WAAW,IAChB,YAAC,SAAD,CAAQC,MAAK,WAAaC,IAAaC,YACvC,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,OAEDL,EAAMM,KAAI,SAACC,GAAD,OACT,YAAC,IAAD,CACEC,IAAKD,EAAKE,KAAKC,OAAOC,KACtBC,KAAML,EAAKE,KAAKI,YAAYD,KAC5BE,QAASP,EAAKE,KAAKK,QACnBH,KAAMJ,EAAKE,KAAKC,OAAOC,KACvBI,WAAYR,EAAKE,KAAKM,WACtBZ,MAAOI,EAAKE,KAAKI,YAAYV,MAC7Ba,OAAQT,EAAKE,KAAKI,YAAYG,OAC9BC,SAAUV,EAAKE,KAAKI,YAAYI,SAChCC,SAAUX,EAAKE,KAAKI,YAAYK,cAGpC,YAAC,IAAD,CAAYpB,YAAaA,EAAaC,WAAYA,EAAYoB,IAAI,gBAM7DC,EAAY,aAiCVzB","file":"component---src-templates-blog-tsx-4e6fb0071d4705dbebf2.js","sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { Container } from '@seolhun/localize-components';\n\nimport {\n  Article,\n  Pagination,\n  PostHeader,\n  SEO,\n} from '@/components';\nimport { Layout, Profile } from '@/containers';\nimport Data from '@/models/Data';\n\nimport siteMetadata from '../../siteMetadata';\n\ninterface Props {\n  data: Data;\n  pageContext: {\n    currentPage: number;\n    totalPages: number;\n  };\n}\n\nexport const BlogPage = ({ pageContext, data }: Props) => {\n  const { currentPage, totalPages } = pageContext;\n  const { edges } = data.allMarkdownRemark;\n\n  return (\n    <Layout>\n      <SEO isPostSEO={false} />\n      <Helmet title={`Blogs | ${siteMetadata.siteTitle}`} />\n      <Container>\n        <PostHeader>\n          <Profile />\n        </PostHeader>\n        {edges.map((post) => (\n          <Article\n            key={post.node.fields.slug}\n            date={post.node.frontmatter.date}\n            excerpt={post.node.excerpt}\n            slug={post.node.fields.slug}\n            timeToRead={post.node.timeToRead}\n            title={post.node.frontmatter.title}\n            banner={post.node.frontmatter.banner}\n            category={post.node.frontmatter.category}\n            subTitle={post.node.frontmatter.subTitle}\n          />\n        ))}\n        <Pagination currentPage={currentPage} totalPages={totalPages} url=\"contents\" />\n      </Container>\n    </Layout>\n  );\n};\n\nexport const BlogQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { date: { lt: \"2020-06-08T00:00:00.000Z\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 165)\n          fields {\n            slug\n          }\n          frontmatter {\n            author\n            banner\n            category\n            date(formatString: \"YYYY.MM.DD\")\n            subTitle\n            tags\n            title\n          }\n          html\n          id\n          timeToRead\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n"],"sourceRoot":""}