{"version":3,"sources":["webpack:///./src/templates/Post.tsx","webpack:///./node_modules/gatsby-plugin-disqus/utils.js","webpack:///./node_modules/gatsby-plugin-disqus/index.js","webpack:///./node_modules/gatsby-plugin-disqus/components/Disqus.js","webpack:///./node_modules/gatsby-plugin-disqus/components/CommentCount.js"],"names":["PostContent","marginTop","color","theme","fonts","COLOR","primaryColor","postQuery","PostPage","data","pathContext","prev","next","post","markdownRemark","timeToRead","fields","frontmatter","html","tags","title","date","category","disqusConfig","url","SiteConfig","siteUrl","slug","identifier","postPath","postNode","postSEO","siteTitle","xs","type","weight","isHighlight","to","dangerouslySetInnerHTML","__html","map","tag","i","key","length","config","placeholder","exports","__esModule","insertScript","src","id","parent","script","window","document","createElement","async","appendChild","removeScript","getElementById","removeChild","debounce","func","wait","runOnFirstCall","timeout","context","this","args","arguments","deferredExecution","apply","callNow","clearTimeout","setTimeout","_interopRequireDefault","require","default","_Disqus","Disqus","_CommentCount","CommentCount","_default","_extends2","_objectWithoutPropertiesLoose2","_inheritsLoose2","_react","_propTypes","_utils","_React$Component","props","_this","call","shortname","GATSBY_DISQUS_SHORTNAME","_proto","prototype","componentWillReceiveProps","nextProps","setState","componentWillMount","cleanInstance","componentDidMount","loadInstance","shouldComponentUpdate","current","componentDidUpdate","disqus_config","page","body","DISQUS","reset","error","undefined","thread","hasChildNodes","firstChild","render","_this$props","__source","fileName","lineNumber","__self","Component","propTypes","shape","string","queueResetCount","DISQUSWIDGETS","getCount","className","defaultProps"],"mappings":"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","file":"component---src-templates-post-tsx-3b13f9e0a11739c30ca6.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport styled from '@emotion/styled';\nimport { Col, Container, Row } from '@seolhun/localize-components';\nimport { Typo } from '@seolhun/localize-components-atomic';\nimport { ILocalizeTheme } from '@seolhun/localize-components-styled-types';\nimport { CommentCount, Disqus } from 'gatsby-plugin-disqus';\nimport { kebabCase } from 'lodash';\n\nimport { PostHeader, PrevNext, SEO } from '@/components';\nimport { Layout } from '@/containers';\nimport PathContext from '@/models/PathContext';\nimport Post from '@/models/Post';\nimport SiteConfig from 'config/SiteConfig';\n\nimport '@/utils/prismjs-theme.css';\n\nconst PostContent = styled.div<any, ILocalizeTheme>(({ theme }) => {\n  return {\n    marginTop: '4rem',\n    color: theme.fonts.COLOR.primaryColor,\n  };\n});\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pathContext: PathContext;\n}\n\nconst PostPage = ({ data, pathContext }: Props) => {\n  const { prev, next } = pathContext;\n  const post = data.markdownRemark;\n  const { timeToRead, fields, frontmatter, html } = data.markdownRemark;\n  const { tags, title, date, category } = frontmatter;\n  const disqusConfig = {\n    url: `${SiteConfig.siteUrl}/contents/${fields.slug}`,\n    identifier: fields.slug,\n    title: frontmatter.title,\n  };\n\n  return (\n    <Layout>\n      {post && (\n        <>\n          <SEO postPath={fields.slug} postNode={post} postSEO />\n          <Helmet title={`${title} | ${SiteConfig.siteTitle}`} />\n          <Container>\n            <Row>\n              <Col xs={24}>\n                <PostHeader>\n                  <Typo type='h1' weight={800} isHighlight>\n                    {title}\n                  </Typo>\n\n                  <Typo type='small' weight={500}>\n                    {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\n                    <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n                  </Typo>\n                </PostHeader>\n              </Col>\n            </Row>\n            <PostContent dangerouslySetInnerHTML={{ __html: html }} />\n            {tags && (\n              <Typo type='small'>\n                Tags: &#160;\n                {tags.map((tag, i) => (\n                  <Link key={i} to={`/tags/${kebabCase(tag)}`}>\n                    <Typo type='small'>{tag}</Typo> {i < tags.length - 1 ? `, ` : ``}\n                  </Link>\n                ))}\n              </Typo>\n            )}\n            <Row>\n              <Col xs={24}>\n                <PrevNext prev={prev} next={next} />\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={24}>\n                <CommentCount config={disqusConfig} placeholder={'...'} />\n              </Col>\n              <Col xs={24}>\n                <Disqus config={disqusConfig} />\n              </Col>\n            </Row>\n          </Container>\n        </>\n      )}\n    </Layout>\n  );\n};\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        author\n        subTitle\n        banner\n        category\n        tags\n        date(formatString: \"YYYY.MM.DD\")\n      }\n      timeToRead\n    }\n  }\n`;\n\nexport default PostPage;\n","\"use strict\";\n\nexports.__esModule = true;\nexports.insertScript = insertScript;\nexports.removeScript = removeScript;\nexports.debounce = debounce;\n\nfunction insertScript(src, id, parent) {\n  var script = window.document.createElement('script');\n  script.async = true;\n  script.src = src;\n  script.id = id;\n  parent.appendChild(script);\n  return script;\n}\n\nfunction removeScript(id, parent) {\n  var script = window.document.getElementById(id);\n\n  if (script) {\n    parent.removeChild(script);\n  }\n}\n\nfunction debounce(func, wait, runOnFirstCall) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n\n    var deferredExecution = function deferredExecution() {\n      timeout = null;\n\n      if (!runOnFirstCall) {\n        func.apply(context, args);\n      }\n    };\n\n    var callNow = runOnFirstCall && !timeout;\n    window.clearTimeout(timeout);\n    timeout = setTimeout(deferredExecution, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Disqus = _interopRequireDefault(require(\"./components/Disqus\"));\n\nexports.Disqus = _Disqus.default;\n\nvar _CommentCount = _interopRequireDefault(require(\"./components/CommentCount\"));\n\nexports.CommentCount = _CommentCount.default;\nvar _default = _Disqus.default;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../utils\");\n\nrequire(\"../style.css\");\n\nvar _jsxFileName = \"/Users/brettstevenson/Desktop/Folder/gatsby-plugin-workspace/gatsby-plugin-disqus/src/components/Disqus.jsx\";\n\nvar Disqus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Disqus, _React$Component);\n\n  function Disqus(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.shortname = typeof GATSBY_DISQUS_SHORTNAME !== \"undefined\" && GATSBY_DISQUS_SHORTNAME !== '' ? GATSBY_DISQUS_SHORTNAME : '';\n\n    if (props.config) {\n      _this.config = props.config;\n    } else {\n      _this.config = {\n        identifier: props.identifier,\n        url: props.url,\n        title: props.title\n      };\n    }\n\n    return _this;\n  }\n\n  var _proto = Disqus.prototype;\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    this.setState(nextProps);\n  };\n\n  _proto.componentWillMount = function componentWillMount() {\n    if (typeof window !== 'undefined' && window.document && this.shortname) {\n      this.cleanInstance();\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.loadInstance();\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (this.shortname !== nextProps.shortname) return true;\n    var current = this.config;\n    var next = nextProps.config;\n    if (current.url === next.url && current.identifier === next.identifier) return false;\n    return true;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.loadInstance();\n  };\n\n  _proto.loadInstance = function loadInstance() {\n    if (typeof window !== 'undefined' && window.document && this.shortname) {\n      var component = this;\n      var config = this.config;\n\n      window.disqus_config = function () {\n        this.page.identifier = config.identifier;\n        this.page.title = config.title;\n        this.page.url = config.url;\n      };\n\n      (0, _utils.insertScript)(\"https://\" + this.shortname + \".disqus.com/embed.js\", 'disqus-embed-script', window.document.body);\n    }\n  };\n\n  _proto.cleanInstance = function cleanInstance() {\n    (0, _utils.removeScript)('disqus-embed-script', window.document.body);\n\n    if (window && window.DISQUS) {\n      window.DISQUS.reset();\n    }\n\n    try {\n      delete window.DISQUS;\n    } catch (error) {\n      window.DISQUS = undefined;\n    }\n\n    var thread = window.document.getElementById('disqus_thread');\n\n    if (thread) {\n      while (thread.hasChildNodes()) {\n        thread.removeChild(thread.firstChild);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        config = _this$props.config,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"config\"]);\n    return _react.default.createElement(\"div\", (0, _extends2.default)({\n      id: \"disqus_thread\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  };\n\n  return Disqus;\n}(_react.default.Component);\n\nexports.default = Disqus;\nDisqus.propTypes = {\n  config: _propTypes.default.shape({\n    /*\n     * Tells the Disqus service how to identify the current page. \n     * When the Disqus embed is loaded, the identifier is used to look up \n     * the correct thread. \n     */\n    identifier: _propTypes.default.string,\n\n    /*\n     * Tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus.\n     */\n    title: _propTypes.default.string,\n\n    /*\n     * Tells the Disqus service the URL of the current page.\n     * This URL is used when a thread is created so that Disqus knows which\n     * page a thread belongs to.\n     * (If undefined, Disqus will use the global.location.href)\n     */\n    url: _propTypes.default.string\n  }),\n  identifier: _propTypes.default.string,\n  title: _propTypes.default.string,\n  url: _propTypes.default.string\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../utils\");\n\nvar _jsxFileName = \"/Users/brettstevenson/Desktop/Folder/gatsby-plugin-workspace/gatsby-plugin-disqus/src/components/CommentCount.jsx\";\nvar queueResetCount = (0, _utils.debounce)(function () {\n  if (window.DISQUSWIDGETS) {\n    window.DISQUSWIDGETS.getCount({\n      reset: true\n    });\n  }\n}, 300, false);\n\nvar CommentCount =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(CommentCount, _React$Component);\n\n  function CommentCount(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.shortname = typeof GATSBY_DISQUS_SHORTNAME !== \"undefined\" && GATSBY_DISQUS_SHORTNAME !== '' ? GATSBY_DISQUS_SHORTNAME : '';\n    return _this;\n  }\n\n  var _proto = CommentCount.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.loadInstance();\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var current = this.props.config;\n    var next = nextProps.config;\n    if (current.url === next.url && current.identifier === next.identifier) return false;\n    return true;\n  };\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    this.setState(nextProps);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.loadInstance();\n  };\n\n  _proto.loadInstance = function loadInstance() {\n    if (window.document.getElementById('dsq-count-scr')) {\n      queueResetCount();\n    } else {\n      (0, _utils.insertScript)(\"https://\" + this.shortname + \".disqus.com/count.js\", 'dsq-count-scr', window.document.body);\n    }\n  };\n\n  _proto.cleanInstance = function cleanInstance() {\n    (0, _utils.removeScript)('dsq-count-scr', window.document.body);\n    window.DISQUSWIDGETS = undefined;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        config = _this$props.config,\n        placeholder = _this$props.placeholder,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"config\", \"placeholder\"]);\n    return _react.default.createElement(\"span\", (0, _extends2.default)({\n      className: \"disqus-comment-count\",\n      \"data-disqus-identifier\": config.identifier,\n      \"data-disqus-url\": config.url\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), placeholder);\n  };\n\n  return CommentCount;\n}(_react.default.Component);\n\nexports.default = CommentCount;\nCommentCount.defaultProps = {\n  placeholder: '...'\n};\nCommentCount.propTypes = {\n  config: _propTypes.default.shape({\n    /*\n     * Tells the Disqus service how to identify the current page. \n     * When the Disqus embed is loaded, the identifier is used to look up \n     * the correct thread. \n     */\n    identifier: _propTypes.default.string,\n\n    /*\n     * Tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus.\n     */\n    title: _propTypes.default.string,\n\n    /*\n     * Tells the Disqus service the URL of the current page.\n     * This URL is used when a thread is created so that Disqus knows which\n     * page a thread belongs to.\n     * (If undefined, Disqus will use the global.location.href)\n     */\n    url: _propTypes.default.string\n  }),\n\n  /*\n   * This is the text that will be used as a placeholder prior to \n   * loading the response.\n   */\n  placeholder: _propTypes.default.string\n};"],"sourceRoot":""}