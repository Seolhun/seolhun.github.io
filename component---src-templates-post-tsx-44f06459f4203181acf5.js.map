{"version":3,"sources":["webpack:///./src/templates/Post.tsx"],"names":["PostContent","postQuery","PostPage","data","pathContext","prev","next","post","markdownRemark","timeToRead","fields","frontmatter","html","tags","title","date","category","postPath","slug","postNode","postSEO","config","siteTitle","type","weight","isHighlight","to","dangerouslySetInnerHTML","__html","map","tag","i","key","length"],"mappings":"kQAiBMA,G,OAAc,mBAAH,oBAAG,CAAH,4CAsDJC,EAAY,aAqBVC,UAhEE,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAChBC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACRC,EAAOJ,EAAKK,eAF+B,EAGCL,EAAKK,eAA/CC,EAHyC,EAGzCA,WAAYC,EAH6B,EAG7BA,OAAQC,EAHqB,EAGrBA,YAAaC,EAHQ,EAGRA,KACjCC,EAAgCF,EAAhCE,KAAMC,EAA0BH,EAA1BG,MAAOC,EAAmBJ,EAAnBI,KAAMC,EAAaL,EAAbK,SAE3B,OACE,YAAC,IAAD,KACGT,GACC,8BACE,YAAC,IAAD,CAAKU,SAAUP,EAAOQ,KAAMC,SAAUZ,EAAMa,SAAO,IACnD,YAAC,IAAD,CAAQN,MAAUA,EAAL,MAAgBO,IAAOC,YACpC,YAAC,IAAD,KACE,YAAC,IAAD,CAAMC,KAAK,KAAKC,OAAQ,IAAKC,aAAW,GACrCX,GAEH,YAAC,IAAD,CAAMS,KAAK,QAAQC,OAAQ,KACxBT,EADH,MACkBN,EADlB,iBACkD,IAChD,YAAC,OAAD,CAAMiB,GAAE,eAAiB,IAAUV,IAAcA,KAGrD,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAChB,EAAD,CAAa2B,wBAAyB,CAAEC,OAAQhB,KAC/CC,GACC,iCAEGA,EAAKgB,KAAI,SAACC,EAAKC,GAAN,OACR,YAAC,OAAD,CAAMC,IAAKD,EAAGL,GAAE,SAAW,IAAUI,IACnC,0BAASA,GADX,IAC0BC,EAAIlB,EAAKoB,OAAS,EAAlB,aAKhC,YAAC,IAAD,CAAU5B,KAAMA,EAAMC,KAAMA","file":"component---src-templates-post-tsx-44f06459f4203181acf5.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport React from 'react';\nimport Helmet from 'react-helmet';\n\nimport styled from '@emotion/styled';\nimport { Container } from '@seolhun/localize-components';\nimport { Typo } from '@seolhun/localize-components-atomic';\nimport { kebabCase } from 'lodash';\n\nimport { Content, PostHeader, PrevNext, SEO } from '@/components';\nimport { Layout } from '@/containers';\nimport PathContext from '@/models/PathContext';\nimport Post from '@/models/Post';\nimport config from 'config/SiteConfig';\n\nimport '@/utils/prismjs-theme.css';\n\nconst PostContent = styled.div`\n  margin-top: 4rem;\n`;\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pathContext: PathContext;\n}\n\nconst PostPage = ({ data, pathContext }: Props) => {\n  const { prev, next } = pathContext;\n  const post = data.markdownRemark;\n  const { timeToRead, fields, frontmatter, html } = data.markdownRemark;\n  const { tags, title, date, category } = frontmatter;\n\n  return (\n    <Layout>\n      {post && (\n        <>\n          <SEO postPath={fields.slug} postNode={post} postSEO />\n          <Helmet title={`${title} | ${config.siteTitle}`} />\n          <PostHeader>\n            <Typo type='h1' weight={800} isHighlight>\n              {title}\n            </Typo>\n            <Typo type='small' weight={500}>\n              {date} &mdash; {timeToRead} Min Read &mdash; In{' '}\n              <Link to={`/categories/${kebabCase(category)}`}>{category}</Link>\n            </Typo>\n          </PostHeader>\n          <Container>\n            <Content>\n              <PostContent dangerouslySetInnerHTML={{ __html: html }} />\n              {tags && (\n                <div>\n                  Tags: &#160;\n                  {tags.map((tag, i) => (\n                    <Link key={i} to={`/tags/${kebabCase(tag)}`}>\n                      <strong>{tag}</strong> {i < tags.length - 1 ? `, ` : ``}\n                    </Link>\n                  ))}\n                </div>\n              )}\n              <PrevNext prev={prev} next={next} />\n            </Content>\n          </Container>\n        </>\n      )}\n    </Layout>\n  );\n};\n\nexport const postQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        author\n        subTitle\n        banner\n        category\n        tags\n        date(formatString: \"YYYY.MM.DD\")\n      }\n      timeToRead\n    }\n  }\n`;\n\nexport default PostPage;\n"],"sourceRoot":""}