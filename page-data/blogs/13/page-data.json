{"componentChunkName":"component---src-templates-blog-tsx","path":"/blogs/13","webpackCompilationHash":"","result":{"data":{"allMarkdownRemark":{"totalCount":75,"edges":[{"node":{"fields":{"slug":"algorithm-javascript-hacker-rank-lonely-interger-algorithm"},"frontmatter":{"title":"[Algorithm/Javascript] HackerRank - LonelyInterger Algorithm","date":"09.04.2018","category":"Algorithm"},"excerpt":"이번에는 저번 블로그에 작성한 Bit연산자를 이용하여 LonelyInteger 알고리즘을 풀어볼까 합니다.\nBit 연산자를 읽어보면 해당 알고리즘을 언급하였습니다. 읽어보시고 풀어보면 좋을 것 같습니다. 1. Question HackerRank - LonelyInteger Sample Input 0 Sample Output 0 Sample Input…","timeToRead":1}},{"node":{"fields":{"slug":"algorithm-java-codility-counting-elevator-movements"},"frontmatter":{"title":"[Algorithm/Java] Codility - Counting Elevator Movements","date":"08.04.2018","category":"Algorithm"},"excerpt":"이번에 Codility에서 Elevator로 사람을 운반하는 알고리즘을 만드는 문제입니다. Queue를 사용해야 할 것으로 보이며 Queue를 이용하여 풀어보겠습니다. 1. Question 2. Process Waiting People Queue 만들기 Elevator 한계선 조건 만들기 Waiting People Queue에서 Elevator Queue…","timeToRead":4}},{"node":{"fields":{"slug":"algorithm-java-codility-find-steps-algorithm"},"frontmatter":{"title":"[Algorithm/Java] Codility - FindSteps Algorithm","date":"08.04.2018","category":"Algorithm"},"excerpt":"이번에 Codility에서 알고리즘을 풀게 될 기회를 얻었지만 너무나 많이 못풀었습니다. 아쉽고 슬프지만 앞으로도 계속 풀어나가고 연습하면 더 나아질거라고 생각합니다.\n또한, Javascript로만 풀었는데, Java로 풀어야하는 상황이라서 익숙치가 않은 것도 있었네요. Java로도 가끔씩 풀어보면서 연습해야 할 것 같습니다.\n이 문제를 포함하여 앞으로…","timeToRead":2}},{"node":{"fields":{"slug":"javascript-es-6-es-6-부터-등장하는-개발자가-알아야-할-특징-part-2"},"frontmatter":{"title":"[Javascript/ES6] ES6부터 등장하는 개발자가 알아야 할 특징 - Part 2","date":"07.04.2018","category":"Javascript"},"excerpt":"이번에는 저번 시간에 작성한 ES6 Featur Part1에 이어 Part 2에 해당되는 내용을 정리해볼까 합니다. 간단히 정리하였지만 필요한 기능들을 숙지하면 큰 도움이 될 것 같습니다. Intro ES6 특징 - Part 1을 먼저 정리하였으니, 2파트 모두 확인하실 분들은 블로그를 확인해주세요. Part 1 Block-Scoped Constructs…","timeToRead":4}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":4,"skip":48,"totalPages":19,"currentPage":13}}}