{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/web-웹사이트의-속도를-개선할-수-있는-방법-9-가지-정리-part-1","webpackCompilationHash":"","result":{"data":{"markdownRemark":{"html":"<p>이번에는 웹사이트를 개선하기 위한 구글에서 추천하는 방법들에 간단히 정리해볼까 합니다. 서비스의 성공을 위해 이제는 프론트엔드의 중요성이 많이 커진 만큼 유저들이 불편하지 않도록 만들기 위한 웹 사이트 최적화 방법을 이해/숙지하면 큰 도움이 될 것이라 생각하였습니다.</p>\n<h2 id=\"intro\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>구글에서 잘 정리한 웹 사이트를 개선하기 위한 9가지 방법에 대해서 필요한 정보들을 모아서 정리해보는 시간을 가져볼까 합니다. 너무 잘 작성된 글이지만, 이를 한번 더 정독하면서 조금씩 정리하면 이해하고 숙지하는데 더 큰 도움이 되어 이런 시간을 가져볼까 합니다.</p>\n<p>목차는 내용이 커질것으로 생각하여 아래와 같이 2개의 파트로 나눠서 적어볼까 합니다.</p>\n<h4 id=\"--part-1\"><a href=\"#--part-1\" aria-label=\"  part 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- <a href=\"/posts/web/20180423-web-howtooptimizeweb1/\">Part 1</a></h4>\n<ul>\n<li>방문 페이지 리디렉션 사용 안함</li>\n<li>압축 사용</li>\n<li>서버 응답 시간 개선</li>\n<li>브라우저 캐싱 활용</li>\n</ul>\n<h4 id=\"--part-2\"><a href=\"#--part-2\" aria-label=\"  part 2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- <a href=\"/posts/web/20180423-web-howtooptimizeweb2/\">Part 2</a></h4>\n<ul>\n<li>리소스 축소</li>\n<li>이미지 최적화</li>\n<li>CSS 전송 최적화</li>\n<li>표시되는 콘텐츠의 우선순위 지정</li>\n<li>렌더링 차단 자바스크립트 삭제</li>\n</ul>\n<h2 id=\"1-방문-페이지-리디렉션-방지\"><a href=\"#1-%EB%B0%A9%EB%AC%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A6%AC%EB%94%94%EB%A0%89%EC%85%98-%EB%B0%A9%EC%A7%80\" aria-label=\"1 방문 페이지 리디렉션 방지 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 방문 페이지 리디렉션 방지</h2>\n<p>이 규칙은 지정된 URL에서 최종 방문 페이지로의 리디렉션이 둘 이상 있음이 PageSpeed Insights에서 감지되면 트리거됩니다.</p>\n<h4 id=\"--개요\"><a href=\"#--%EA%B0%9C%EC%9A%94\" aria-label=\"  개요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 개요</h4>\n<p><code class=\"language-text\">리디렉션은 HTTP 요청과 응답 간 주기를 추가로 트리거하고 페이지 렌더링을 지연시킵니다.</code> 각 리디렉션이 단일 왕복(HTTP 요청과 응답 간)을 추가하면 가장 좋지만, 최악의 경우 DNS 조회, TCP 핸드셰이크, TLS 협상을 위한 여러 추가적인 왕복에 더해 HTTP 요청과 응답 간 주기가 추가로 발생합니다. 따라서 사이트 속도를 개선하려면 리디렉션의 사용을 최소화해야 합니다.</p>\n<h4 id=\"--다음은-리디렉션-패턴의-예\"><a href=\"#--%EB%8B%A4%EC%9D%8C%EC%9D%80-%EB%A6%AC%EB%94%94%EB%A0%89%EC%85%98-%ED%8C%A8%ED%84%B4%EC%9D%98-%EC%98%88\" aria-label=\"  다음은 리디렉션 패턴의 예 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 다음은 리디렉션 패턴의 예</h4>\n<ol>\n<li>example.com에서는 반응형 웹 디자인을 사용하여 리디렉션이 필요하지 않으며 빠르고 최적화된 상태입니다.</li>\n<li>example.com → m.example.com/home - 모바일 사용자가 여러 번 왕복해야 하는 불편함이 있습니다.</li>\n<li>example.com → www.example.com → m.example.com - 모바일 환경이 매우 느립니다.</li>\n</ol>\n<h4 id=\"--해결책\"><a href=\"#--%ED%95%B4%EA%B2%B0%EC%B1%85\" aria-label=\"  해결책 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 해결책</h4>\n<ul>\n<li>Responsive Design 적용하기</li>\n<li>\n<p>ViewPort 적용하기</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>meta viewport 값 width=device-width를 사용하면 기기 독립적 픽셀에서 화면 너비에 맞게 페이지를 맞춥니다. 이렇게 하면 렌더링되는 화면이 작은 휴대폰이든 큰 데스크톱 모니터에든 상관없이, 다양한 화면 크기에 맞게 페이지의 콘텐츠를 재배치할 수 있습니다.</li>\n</ul>\n</li>\n<li>\n<p>CSS 미디어 쿼리 적용</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>print.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>print<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@media</span> print</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* print style sheets go here */</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token atrule\"><span class=\"token rule\">@import</span> <span class=\"token url\"><span class=\"token function\">url</span><span class=\"token punctuation\">(</span>print.css<span class=\"token punctuation\">)</span></span> print<span class=\"token punctuation\">;</span></span></code></pre></div>\n</li>\n<li>\n<p>미디어 중단점을 활용한 CSS 작성</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>weather.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>(max-width:600px)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>weather-2-small.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>(min-width:601px)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>weather-2-large.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"--더-보기\"><a href=\"#--%EB%8D%94-%EB%B3%B4%EA%B8%B0\" aria-label=\"  더 보기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 더 보기</h4>\n<p>위의 사항을 더 알고싶으신 분들은 여기를 정독하세요. <a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/#responsive-web-design\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google - Responsive-web-design</a></p>\n<h2 id=\"2-압축-사용\"><a href=\"#2-%EC%95%95%EC%B6%95-%EC%82%AC%EC%9A%A9\" aria-label=\"2 압축 사용 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 압축 사용</h2>\n<p>이 규칙은 PageSpeed Insights에서 압축 가능한 리소스가 gzip으로 압축되지 않은 상태로 전송되었음이 감지되면 트리거됩니다.</p>\n<h4 id=\"--개요-1\"><a href=\"#--%EA%B0%9C%EC%9A%94-1\" aria-label=\"  개요 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 개요</h4>\n<p><code class=\"language-text\">모든 최신 브라우저는 모든 HTTP 요청에서 gzip 압축을 지원하고 자동으로 협상합니다.</code> gzip 압축을 사용하면 전송되는 응답의 크기를 최대 90%까지 줄일 수 있으며, 이를 통해 리소스 다운로드 시간을 크게 낮추고 클라이언트의 데이터 사용량을 줄이며 페이지의 첫 번째 렌더링 시간을 향상할 수 있습니다. 자세히 알아보려면 <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/optimize-encoding-and-transfer#text-compression-with-gzip\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GZIP을 사용한 텍스트 압축을 참조</a>하세요.</p>\n<h4 id=\"--권장사항\"><a href=\"#--%EA%B6%8C%EC%9E%A5%EC%82%AC%ED%95%AD\" aria-label=\"  권장사항 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 권장사항</h4>\n<p>웹 서버에서 gzip 압축 지원을 사용 설정하고 테스트하세요. HTML5 Boilerplate 프로젝트에는 가장 많이 사용되는 모든 서버용 샘플 구성 파일과 각 구성 플래그 및 설정에 관한 자세한 설명이 포함되어 있습니다. 목록에서 원하는 서버를 찾고 gzip 섹션을 찾은 다음 사용하는 서버가 권장 설정과 같이 구성되어 있는지 확인하세요.</p>\n<ul>\n<li>\n<p>웹 서버에서 압축을 사용하는 방법은 아래 사이트에서 참조하세요.</p>\n<ul>\n<li>Apache: <a href=\"http://httpd.apache.org/docs/current/mod/mod_deflate.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mod_deflate 사용</a></li>\n<li>Nginx: <a href=\"http://nginx.org/en/docs/http/ngx_http_gzip_module.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ngx<em>http</em>gzip_module 사용</a></li>\n<li>IIS: <a href=\"https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/cc771003(v=ws.10)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTTP 압축 구성</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-서버-응답-시간-개선\"><a href=\"#3-%EC%84%9C%EB%B2%84-%EC%9D%91%EB%8B%B5-%EC%8B%9C%EA%B0%84-%EA%B0%9C%EC%84%A0\" aria-label=\"3 서버 응답 시간 개선 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 서버 응답 시간 개선</h2>\n<p>이 규칙은 PageSpeed Insights에서 서버 응답 시간이 200 ms 이상임이 감지되면 트리거됩니다.</p>\n<h4 id=\"--개요-2\"><a href=\"#--%EA%B0%9C%EC%9A%94-2\" aria-label=\"  개요 2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 개요</h4>\n<p>서버 응답 시간은 서버에서 페이지 렌더링을 시작하기 위해 필요한 HTML을 로드하는 데 걸리는 시간에서 Google과 서버 간 네트워크 지연 시간을 차감하여 측정합니다. 실행할 때마다 변동이 있을 수 있지만 차이는 별로 크지 않습니다. 실제로 변동이 심한 서버 응답 시간은 기반 성능에 문제가 있음을 나타낼 수 있습니다.</p>\n<h4 id=\"--권장사항-1\"><a href=\"#--%EA%B6%8C%EC%9E%A5%EC%82%AC%ED%95%AD-1\" aria-label=\"  권장사항 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 권장사항</h4>\n<p><code class=\"language-text\">서버 응답 시간을 200 ms 아래로 줄여야 합니다.</code> 서버의 응답 속도를 저하시키는 요인으로는 느린 애플리케이션 로직, 느린 데이터베이스 쿼리, 느린 라우팅, 프레임워크, 라이브러리, 리소스 CPU 부족 현상 또는 메모리 부족 현상 등 수십 가지가 있습니다. 서버의 응답 시간을 개선하려면 이러한 모든 요인을 고려해야 합니다.</p>\n<p><code class=\"language-text\">서버 응답 시간이 높은 이유를 밝히기 위한 첫 단계는 측정입니다.</code> 그런 다음 데이터를 갖추고 문제 해결 방법에 관한 적절한 가이드를 참조하세요. 문제를 해결한 후에도 서버 응답 시간을 계속 측정하여 향후 성능 병목 현상을 해결해야 합니다.</p>\n<ol>\n<li>기존 성능과 데이터를 수집 및 검사합니다. 사용 가능한 성능과 데이터가 없으면 자동화된 웹 애플리케이션 모니터링 솔루션을 사용하여 평가하거나 맞춤 계측 도구를 추가하세요. 대부분의 플랫폼에서 사용할 수 있는 호스팅된 오픈소스 버전의 솔루션이 있습니다.</li>\n<li>상위 성능 병목 현상을 식별 및 해결합니다. 많이 사용되는 웹 프레임워크나 콘텐츠 관리 플랫폼을 사용하는 경우 성능 최적화 권장사항 도움말을 참조하세요.</li>\n<li>향후 있을 수 있는 성능 퇴행을 모니터링 및 경고합니다.</li>\n</ol>\n<h2 id=\"4-브라우저-캐싱-활용\"><a href=\"#4-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-%EC%BA%90%EC%8B%B1-%ED%99%9C%EC%9A%A9\" aria-label=\"4 브라우저 캐싱 활용 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 브라우저 캐싱 활용</h2>\n<p>이 규칙은 PageSpeed Insights에서 서버의 응답에 캐싱 헤더가 포함되어 있지 않음을 감지하거나 리소스가 잠깐 동안만 캐시되도록 지정된 경우 트리거됩니다.</p>\n<h4 id=\"--개요-3\"><a href=\"#--%EA%B0%9C%EC%9A%94-3\" aria-label=\"  개요 3 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 개요</h4>\n<p>네트워크를 통해 리소스를 가져오면 속도도 느리고 비용도 많이 듭니다. 즉, 다운로드하는 데 클라이언트와 서버 간에 왕복이 여러 번 발생할 수 있으며 이로 인해 처리가 지연되고 페이지 렌더링이 차단되며 방문자에게 데이터 비용이 부과될 수도 있습니다. <code class=\"language-text\">모든 서버 응답은 캐싱 정책을 지정해야 클라이언트에서 이전에 가져온 응답을 재사용할 수 있는지 여부와 시기를 판단하는 데 도움이 됩니다.</code></p>\n<h4 id=\"--권장사항-2\"><a href=\"#--%EA%B6%8C%EC%9E%A5%EC%82%AC%ED%95%AD-2\" aria-label=\"  권장사항 2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 권장사항</h4>\n<p>각 리소스는 이 리소스가 캐시될 수 있는지, 리소스를 누가 얼마 동안 캐시할 수 있는지, 가능한 경우 캐싱 정책이 만료되면 어떻게 효율적으로 재확인될 수 있는지와 같은 질문에 부합하는 명시적인 캐싱 정책을 지정해야 합니다. <code class=\"language-text\">서버에서 응답을 반환할 때 Cache-Control 및 ETag 헤더를 제공해야 합니다.</code></p>\n<ol>\n<li>Cache-Control 헤더는 브라우저 및 기타 중간 캐시에서 개별 응답을 캐시할 수 있는 방법과 기간을 정의합니다. 자세히 알아보려면 <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching#cache-control\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Cache-Control로 캐싱</a>을 참조하세요.</li>\n<li>ETag 헤더에서는 리소스가 마지막으로 요청된 후 변경되었는지 확인하기 위해 브라우저에서 자동으로 보내는 재확인 토큰을 제공합니다. 자세히 알아보려면 <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching#validating-cached-responses-with-etags\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ETag로 캐시된 응답의 유효성 검사</a>를 참조하세요.</li>\n<li>\n<p>사이트에 가장 적합한 캐싱 정책을 확인하려면 다음 가이드를 참조하세요.</p>\n<ol>\n<li>최적의 Cache-Control 정책 정의</li>\n<li>캐시된 응답 무효화 및 업데이트</li>\n<li>캐싱 검사 목록</li>\n</ol>\n</li>\n</ol>\n<p><code class=\"language-text\">최소 캐시 시간은 1주일이 좋으며 정적 애셋 또는 드물게 변경되는 애셋의 경우 최대 1년이 좋습니다.</code> 리소스가 무효화되는 시기를 정확히 관리해야 하는 경우 URL 지문이나 버전 기술을 사용하는 것이 좋습니다. 위의 캐시된 응답 무효화 및 업데이트 링크를 참조하세요.</p>\n<h4 id=\"--직접-확인해보기\"><a href=\"#--%EC%A7%81%EC%A0%91-%ED%99%95%EC%9D%B8%ED%95%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"  직접 확인해보기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 직접 확인해보기</h4>\n<p>참고하고 있는 사이트에서 Google Chrome Dev-Tools Network에 들어가서 Resources에 아래와 같은 Response(응답)을 확인할 수 있었습니다. 더 많은 정보가 있지만 관련된 정보만 가져왔고, 간단히 설명하기 위해 수정하였습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">cache-control: public, max-age<span class=\"token operator\">=</span><span class=\"token number\">120</span>\ncontent-encoding: <span class=\"token function\">gzip</span>\ncontent-length: <span class=\"token number\">25852</span>\netag: <span class=\"token string\">\"aInfpg\"</span>\nstatus: <span class=\"token number\">200</span></code></pre></div>\n<p>서버가 응답을 반환할 때는 응답의 콘텐츠 유형, 길이, 캐싱 지시문, 유효성 검사 토큰 등을 설명하는 HTTP 헤더 모음도 방출합니다.\n예를 들어, 서버는 25852바이트의 응답을 반환하고, 클라이언트에 최대 120초 동안 이를 캐시하도록 지시하고, 응답이 만료된 후 리소스가 수정되었는지 확인하는 데 사용할 수 있는 유효성 검사 토큰('aInfpg')을 제공합니다.</p>\n<p>만약, 캐시가 종료된 후에 다시 Resources를 요청할 때, 변경사항이 없다면, 'If-None-Match' HTTP 요청 헤더 내에서 ETag 토큰을 자동으로 제공합니다. <code class=\"language-text\">서버는 현재 리소스와 비교하여 이 토큰을 검사하여 토큰이 변경되지 않은 경우, 서버는 &#39;304 Not Modified&#39; 응답을 반환합니다.</code> 이 응답은 캐시에 저장된 응답이 변경되지 않았고 추가로 120초 동안 갱신될 수 있음을 브라우저에 알립니다. 참고로, 응답을 다시 다운로드할 필요가 없으므로 시간과 대역폭이 절약됩니다.</p>\n<h4 id=\"--최적의-cache-control-정책-정의\"><a href=\"#--%EC%B5%9C%EC%A0%81%EC%9D%98-cache-control-%EC%A0%95%EC%B1%85-%EC%A0%95%EC%9D%98\" aria-label=\"  최적의 cache control 정책 정의 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 최적의 Cache-Control 정책 정의</h4>\n<div class='text-center'>\n  <img src=\"../../images/contents/20180423/optimization/http-cache-decision-tree.png\" width=\"50%\">\n</div>\n<h4 id=\"--더-보기-1\"><a href=\"#--%EB%8D%94-%EB%B3%B4%EA%B8%B0-1\" aria-label=\"  더 보기 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 더 보기</h4>\n<p>위의 사항을 자세히 보고싶으신 분들은 여기를 정독해주세요. <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching#cache-control\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google - Cache Control</a></p>\n<h2 id=\"outro\"><a href=\"#outro\" aria-label=\"outro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Outro</h2>\n<p>구글에서 참 잘정리된 문서를 통해 많은 내용을 학습할 수 있었습니다. 그 중 가장 흥미로운 글은 Cache-Control이라고 할 수 있었습니다. 이는 HTTP-완정정복 관련한 책에서도 나오는 내용입니다. HTTP관련한 최적화에는 Cache-Control을 반드시 잘 사용하라라는 내용을 담고 있는데, 이와 관련하여 브라우저와 네트워크 내용을 잘 정리하여 알려주었다고 생각합니다. 다음 5가지 관련사항은 Part2에서 정리해보겠습니다.</p>\n<h2 id=\"references\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<ul>\n<li><a href=\"https://developers.google.com/speed/docs/insights/rules\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google PageSpeed Insights</a></li>\n</ul>","fields":{"slug":"web-웹사이트의-속도를-개선할-수-있는-방법-9-가지-정리-part-1"},"frontmatter":{"title":"[Web] 웹사이트의 속도를 개선할 수 있는 방법 9가지 정리 - Part 1","date":"23.04.2018","category":null,"tags":["Web","Optimization","Cache","HTTP","gzip","Priority"],"banner":null},"timeToRead":8}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"web-웹사이트의-속도를-개선할-수-있는-방법-9-가지-정리-part-1","prev":{"excerpt":"이번에는 웹사이트를 개선하기 위한 구글에서 추천하는 방법들에 간단히 정리해볼까 합니다. 서비스의 성공을 위해 이제는 프론트엔드의 중요성이 많이 커진 만큼 유저들이 불편하지 않도록 만들기 위한 웹 사이트 최적화 방법을 이해/숙지하면 큰 도움이 될 것이라 생각하였습니다. Intro 구글에서 잘 정리한 웹 사이트를 개선하기 위한…","html":"<p>이번에는 웹사이트를 개선하기 위한 구글에서 추천하는 방법들에 간단히 정리해볼까 합니다. 서비스의 성공을 위해 이제는 프론트엔드의 중요성이 많이 커진 만큼 유저들이 불편하지 않도록 만들기 위한 웹 사이트 최적화 방법을 이해/숙지하면 큰 도움이 될 것이라 생각하였습니다.</p>\n<h2 id=\"intro\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>구글에서 잘 정리한 웹 사이트를 개선하기 위한 9가지 방법에 대해서 필요한 정보들을 모아서 정리해보는 시간을 가져볼까 합니다. 너무 잘 작성된 글이지만, 이를 한번 더 정독하면서 조금씩 정리하면 이해하고 숙지하는데 더 큰 도움이 되어 이런 시간을 가져볼까 합니다.</p>\n<p>목차는 내용이 커질것으로 생각하여 아래와 같이 2개의 파트로 나눠서 적어볼까 합니다.</p>\n<h4 id=\"--part-1\"><a href=\"#--part-1\" aria-label=\"  part 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- <a href=\"/posts/web/20180423-web-howtooptimizeweb1/\">Part 1</a></h4>\n<ul>\n<li>방문 페이지 리디렉션 사용 안함</li>\n<li>압축 사용</li>\n<li>서버 응답 시간 개선</li>\n<li>브라우저 캐싱 활용</li>\n</ul>\n<h4 id=\"--part-2\"><a href=\"#--part-2\" aria-label=\"  part 2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- <a href=\"/posts/web/20180423-web-howtooptimizeweb2/\">Part 2</a></h4>\n<ul>\n<li>리소스 축소</li>\n<li>이미지 최적화</li>\n<li>CSS 전송 최적화</li>\n<li>표시되는 콘텐츠의 우선순위 지정</li>\n<li>렌더링 차단 자바스크립트 삭제</li>\n</ul>\n<h2 id=\"5-리소스html-css-js-축소\"><a href=\"#5-%EB%A6%AC%EC%86%8C%EC%8A%A4html-css-js-%EC%B6%95%EC%86%8C\" aria-label=\"5 리소스html css js 축소 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 리소스(HTML, CSS, JS) 축소</h2>\n<p>이 규칙은 PageSpeed Insights에서 압축을 통해 리소스 중 하나의 크기를 줄일 수 있음이 감지되면 트리거됩니다.</p>\n<h4 id=\"--개요\"><a href=\"#--%EA%B0%9C%EC%9A%94\" aria-label=\"  개요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 개요</h4>\n<p><code class=\"language-text\">압축은 브라우저에서 리소스를 처리하는 방식에 영향을 주지 않고 불필요하거나 중복된 데이터를 삭제하는 과정</code>을 말합니다. 예를 들어, 코드 주석 및 형식 지정, 사용되지 않는 코드 삭제, 더 짧은 변수와 함수 이름 사용하기 등의 과정이 있습니다.</p>\n<p>자세한 내용은 사전 처리 및 상황별 최적화를 참조하세요.</p>\n<h4 id=\"--권장사항\"><a href=\"#--%EA%B6%8C%EC%9E%A5%EC%82%AC%ED%95%AD\" aria-label=\"  권장사항 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 권장사항</h4>\n<p>다음과 같이 HTML, CSS, 자바스크립트 리소스를 압축합니다.</p>\n<ul>\n<li>HTML을 압축하려면 <a href=\"https://github.com/kangax/html-minifier\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTMLMinifier</a>를 사용해 보세요.</li>\n<li>CSS를 압축하려면 <a href=\"https://github.com/ben-eb/cssnano\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CSSNano</a> 및 <a href=\"https://github.com/css/csso\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">csso</a>를 사용해 보세요.</li>\n<li>자바스크립트를 압축하려면 <a href=\"https://github.com/mishoo/UglifyJS2\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">UglifyJS</a>를 사용해 보세요. <a href=\"https://developers.google.com/closure/compiler/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Closure Compiler</a>도 매우 효과적입니다.</li>\n</ul>\n<div class='text-center'>\n  <img src=\"/images/contents/20180423/optimization/resources-zip.png\" width=\"100%\">\n</div><br>\n<ul>\n<li>다른 방법으로는, <a href=\"https://developers.google.com/speed/pagespeed/module/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PageSpeed 모듈</a>을 사용하면, Apache나 Nginx 웹 서버와 통합되어 리소스를 압축하고 사이트를 자동으로 최적화할 수 있습니다.</li>\n</ul>\n<h4 id=\"--첨언\"><a href=\"#--%EC%B2%A8%EC%96%B8\" aria-label=\"  첨언 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 첨언</h4>\n<p>위와 관련된 사항들에서 Webpack을 사용하면 대부분을 해결할 수 있습니다. 위에서 언급된 라이브러리들은 대부분 Webpack Module로 제공되고 있으며, Webpack 설정에서 해당 라이브러리들을 빌드 혹은 개발시 손쉽게 설정하여 사용할 수 있습니다. 간단한 예로 <a href=\"https://github.com/webpack-contrib/uglifyjs-webpack-plugin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">uglifyjs-webpack-plugin</a>를 참고하시면 이해가 빠르리라 생각합니다.</p>\n<h2 id=\"6-이미지-최적화\"><a href=\"#6-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"6 이미지 최적화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 이미지 최적화</h2>\n<p>이 규칙은 PageSpeed Insights에서 화질에 큰 영향을 주지 않고 파일 크기를 줄여서 페이지의 이미지를 최적화할 수 있음이 감지되면 트리거됩니다.</p>\n<h4 id=\"--개요-1\"><a href=\"#--%EA%B0%9C%EC%9A%94-1\" aria-label=\"  개요 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 개요</h4>\n<p>이미지는 대개 페이지에 다운로드된 바이트의 대부분을 차지합니다. 따라서 이미지를 최적화하면 브라우저에서 다운로드해야 하는 바이트 수가 감소하고 클라이언트의 대역폭 경쟁이 줄어들며 브라우저가 콘텐츠를 다운로드하여 화면에 렌더링할 수 있는 속도가 빨라져서 일부 대용량 바이트를 절감하고 성능이 개선되는 경우가 많습니다.</p>\n<h4 id=\"--권장사항-1\"><a href=\"#--%EA%B6%8C%EC%9E%A5%EC%82%AC%ED%95%AD-1\" aria-label=\"  권장사항 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 권장사항</h4>\n<p>이미지 애셋에 가장 적합한 형식과 최적화 전략을 찾으려면 인코딩되는 데이터의 유형, 이미지 형식 기능, 화질 설정, 해상도 등을 꼼꼼히 분석해야 합니다. 또한 어떤 이미지가 벡터 형식으로 가장 잘 전송되는지, CSS를 통해 원하는 효과를 얻을 수 있는지, 각 기기 유형에 맞게 확장된 애셋을 전송하는 방법을 고려해야 합니다.</p>\n<h4 id=\"--code-classlanguage-text이미지-유형의-최적화필독code\"><a href=\"#--code-classlanguage-text%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%9C%A0%ED%98%95%EC%9D%98-%EC%B5%9C%EC%A0%81%ED%99%94%ED%95%84%EB%8F%85code\" aria-label=\"  code classlanguage text이미지 유형의 최적화필독code permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- <code class=\"language-text\">이미지 유형의 최적화(필독)</code></h4>\n<ul>\n<li><a href=\"https://developers.google.com/web/fundamentals/design-and-ux/responsive/images\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">반응형 이미지 전송을 위한 권장사항</a>을 따르세요.</li>\n<li>각 <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/image-optimization#image_optimization_checklist\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이미지의 이미지 최적화 검사 목록</a>을 따르세요.</li>\n</ul>\n<h4 id=\"--첨언-1\"><a href=\"#--%EC%B2%A8%EC%96%B8-1\" aria-label=\"  첨언 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 첨언</h4>\n<p>이미지 최적화는 반응형/압축/파일형식에 따라 권장되는 방법이 다양합니다. 또한, 브라우저에 따라 지원되는 최신기술이 생겨나면서 이에 따라 쉽게 적용될 수 있는 부분도 증가되었습니다. 이러한 부분들알 숙지하여 개발한다면 프론트엔드 개발에서 큰 도움이 될 것입니다.</p>\n<p>간단한 1가지를 작성하겠습니다.</p>\n<blockquote>\n<p>picture 요소가 브라우저에 들어가기 시작했습니다. 아직은 이 요소가 모든 브라우저에서 제공되지는 않지만, 뛰어난 이전 버전과의 호환성과 <a href=\"https://scottjehl.github.io/picturefill/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Picturefill</a> 폴리필의 잠재적 용도가 있기 때문에 이 요소를 사용하는 것이 좋습니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picture</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>(min-width: 800px)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>head.jpg, head-2x.jpg 2x<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>source</span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>(min-width: 450px)<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>head-small.jpg, head-small-2x.jpg 2x<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>head-fb.jpg<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>head-fb-2x.jpg 2x<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>a head carved out of wood<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picture</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>위의 예시에서 브라우저 너비가 최소 800px 이상이면 기기 해상도에 따라 head.jpg 또는 head-2x.jpg가 사용됩니다.</li>\n<li>브라우저가 450px 및 800px 사이이면 다시 기기 해상도에 따라 head-small.jpg 또는 head-small-2x.jpg가 사용됩니다.</li>\n<li>450px 미만인 화면 너비의 경우 picture 요소가 지원되지 않는 이전 버전과의 호환성을 위해, 브라우저는 대신 img 요소를 렌더링해야 합니다.</li>\n</ul>\n<h2 id=\"7-css-전송-최적화\"><a href=\"#7-css-%EC%A0%84%EC%86%A1-%EC%B5%9C%EC%A0%81%ED%99%94\" aria-label=\"7 css 전송 최적화 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. CSS 전송 최적화</h2>\n<p>이 규칙은 PageSpeed Insights에서 페이지에 첫 번째 렌더링 시간을 지연시키는 렌더링 차단 외부 스타일시트가 포함되어 있음이 감지되면 트리거됩니다.</p>\n<h4 id=\"--개요-2\"><a href=\"#--%EA%B0%9C%EC%9A%94-2\" aria-label=\"  개요 2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 개요</h4>\n<p>브라우저에서 콘텐츠를 렌더링하려면 먼저 현재 페이지의 모든 스타일과 레이아웃 정보를 처리해야 합니다. 따라서 브라우저는 외부 스타일시트가 다운로드되고 처리될 때까지 렌더링을 차단하는데, 이로 인해 왕복을 여러 번 해야 하고 첫 번째 렌더링 시간이 지연될 수 있습니다. 중요 렌더링 경로에 관해 자세히 알아보려면 <a href=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">렌더링 트리 생성, 레이아웃 및 페인트</a>를 참조하세요. 또한 렌더링 차단을 해제하고 CSS 전송을 향상하는 방법에 관한 도움말은 <a href=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-blocking-css\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">렌더링 차단 CSS</a>를 참조하세요.</p>\n<h4 id=\"--권장사항-2\"><a href=\"#--%EA%B6%8C%EC%9E%A5%EC%82%AC%ED%95%AD-2\" aria-label=\"  권장사항 2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 권장사항</h4>\n<p>외부 CSS 리소스의 크기가 작은 경우 HTML 문서에 직접 리소스를 삽입할 수 있는데, 이를 인라인이라고도 합니다. 이렇게 작은 CSS를 삽입하면 브라우저에서 페이지 렌더링을 진행할 수 있습니다. CSS 파일이 큰 경우 CSS를 전부 삽입하면 PageSpeed Insights에서 표시되는 콘텐츠의 우선순위 지정을 통해 페이지에서 스크롤 없이 볼 수 있는 부분이 너무 크다는 경고를 보낼 수 있습니다. CSS 파일이 크면 스크롤 없이 볼 수 있는 콘텐츠의 렌더링에 필요한 CSS를 확인하여 삽입한 다음 스크롤 없이 볼 수 있는 콘텐츠의 로드가 완료될 때까지 나머지 스타일의 로드를 지연시켜야 합니다.</p>\n<h4 id=\"--css의-렌더링-차단-컨트롤-하기\"><a href=\"#--css%EC%9D%98-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%B0%A8%EB%8B%A8-%EC%BB%A8%ED%8A%B8%EB%A1%A4-%ED%95%98%EA%B8%B0\" aria-label=\"  css의 렌더링 차단 컨트롤 하기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- CSS의 렌더링 차단 컨트롤 하기</h4>\n<blockquote>\n<p>CSS는 렌더링 차단 리소스입니다. 최초 렌더링에 걸리는 시간을 최적화하려면 클라이언트에 최대한 빠르게 다운로드되어야 합니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>style.css<span class=\"token punctuation\">\"</span></span>    <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>style.css<span class=\"token punctuation\">\"</span></span>    <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>all<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>portrait.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>orientation:portrait<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>print.css<span class=\"token punctuation\">\"</span></span>    <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">media</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>print<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>첫 번째 선언은 렌더링을 차단하고 모든 조건에서 일치합니다.</li>\n<li>두 번째 선언도 렌더링을 차단합니다. <code class=\"language-text\">all</code>이 기본 유형이므로 특정 유형을 지정하지 않을 경우 암묵적으로 <code class=\"language-text\">all</code>로 설정됩니다. <code class=\"language-text\">따라서 첫 번째와 두 번째 선언은 사실상 똑같습니다.</code></li>\n<li>\n<p>세 번째 선언은 페이지가 로드될 때 평가되는 동적 미디어 쿼리를 가집니다. portrait.css의 렌더링 차단 여부는 페이지가 로드되는 중에 기기의 방향에 따라 달라질 수 있습니다.</p>\n<ul>\n<li>가로방향일 때는 landscape를, 세로방향일 땐 portrait를 지정할 시 true를 반환합니다.</li>\n</ul>\n</li>\n<li>마지막 선언은 페이지가 인쇄될 때만 적용됩니다. 따라서 페이지가 브라우저에서 처음 로드될 때는 렌더링이 차단되지 않습니다.</li>\n</ul>\n<h4 id=\"--code-classlanguage-text필독-사항code\"><a href=\"#--code-classlanguage-text%ED%95%84%EB%8F%85-%EC%82%AC%ED%95%ADcode\" aria-label=\"  code classlanguage text필독 사항code permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- <code class=\"language-text\">필독 사항</code></h4>\n<p>HTML 및 CSS 입력을 기반으로 DOM 및 CSSOM 트리를 빌드되며, 이들 모두 문서의 각기 다른 측면을 캡처하는 서로 독립적인 객체입니다. 하나는 콘텐츠를 설명하고, 다른 하나는 문서에 적용되어야 하는 스타일 규칙을 설명합니다. 이 두 가지를 병합하여 브라우저가 화면에 픽셀을 렌더링하도록 하려면 어떻게 해야 할까요?</p>\n<ol>\n<li>HTML 마크업을 처리하고 DOM 트리를 빌드합니다.</li>\n<li>CSS 마크업을 처리하고 CSSOM 트리를 빌드합니다.</li>\n<li><code class=\"language-text\">DOM 및 CSSOM을 결합하여 렌더링 트리를 형성</code>합니다.</li>\n<li>\n<p>렌더링 트리를 생성하려면 브라우저가 대략적으로 다음 작업을 수행합니다.</p>\n<ol>\n<li>DOM 트리의 루트에서 시작하여 표시되는 노드 각각을 트래버스합니다.</li>\n<li>일부 노드는 표시되지 않으며(예: 스크립트 태그, 메타 태그 등), 렌더링된 출력에 반영되지 않으므로 생략됩니다.</li>\n<li>\n<p>일부 노드는 CSS를 통해 숨겨지며 렌더링 트리에서도 생략됩니다.</p>\n<ul>\n<li>예를 들어, span 노드의 경우 'display: none' 속성을 설정하는 명시적 규칙이 있기 때문에 렌더링 트리에서 누락됩니다.</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>렌더링 트리에서 레이아웃을 실행하여 각 노드의 기하학적 형태를 계산합니다.</li>\n<li>마지막 단계는 최종 렌더링 트리에서 수행되는 페인트이며, 픽셀을 화면에 렌더링합니다.</li>\n</ol>\n<img src=\"/images/contents/20180423/optimization/render-tree.png\" width=\"100%\">\n<h2 id=\"8-표시되는-컨텐츠-우선순위-지정\"><a href=\"#8-%ED%91%9C%EC%8B%9C%EB%90%98%EB%8A%94-%EC%BB%A8%ED%85%90%EC%B8%A0-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84-%EC%A7%80%EC%A0%95\" aria-label=\"8 표시되는 컨텐츠 우선순위 지정 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>8. 표시되는 컨텐츠 우선순위 지정</h2>\n<p>이 규칙은 PageSpeed Insights에서 페이지의 스크롤 없이 볼 수 있는 콘텐츠를 렌더링하는 데 추가적인 네트워크 왕복이 필요함이 감지되면 트리거됩니다.</p>\n<h4 id=\"--개요-3\"><a href=\"#--%EA%B0%9C%EC%9A%94-3\" aria-label=\"  개요 3 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 개요</h4>\n<p>필요한 데이터 양이 초기 혼잡 윈도우(일반적으로 14.6 KB 압축)를 초과하면 서버와 사용자 브라우저 간에 추가 왕복이 필요합니다. 모바일 네트워크와 같이 지연 시간이 긴 네트워크를 사용하는 사용자의 경우 이로 인해 페이지 로드가 크게 지연될 수 있습니다.</p>\n<h4 id=\"--권장사항-3\"><a href=\"#--%EA%B6%8C%EC%9E%A5%EC%82%AC%ED%95%AD-3\" aria-label=\"  권장사항 3 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 권장사항</h4>\n<p>페이지 로드 속도를 높이려면 페이지에서 스크롤 없이 볼 수 있는 콘텐츠를 렌더링하는 데 필요한 데이터(HTML 마크업, 이미지, CSS, 자바스크립트)의 크기를 제한하세요. 몇 가지 방법은 다음과 같습니다.</p>\n<h5 id=\"1-스크롤-없이-볼-수-있는-중요한-콘텐츠를-먼저-로드하도록-html-구성\"><a href=\"#1-%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%97%86%EC%9D%B4-%EB%B3%BC-%EC%88%98-%EC%9E%88%EB%8A%94-%EC%A4%91%EC%9A%94%ED%95%9C-%EC%BD%98%ED%85%90%EC%B8%A0%EB%A5%BC-%EB%A8%BC%EC%A0%80-%EB%A1%9C%EB%93%9C%ED%95%98%EB%8F%84%EB%A1%9D-html-%EA%B5%AC%EC%84%B1\" aria-label=\"1 스크롤 없이 볼 수 있는 중요한 콘텐츠를 먼저 로드하도록 html 구성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 스크롤 없이 볼 수 있는 중요한 콘텐츠를 먼저 로드하도록 HTML 구성</h5>\n<p>페이지의 주요 콘텐츠를 먼저 로드하세요. 서버의 초기 응답에서 페이지의 중요한 부분을 렌더링하는 데 필요한 데이터를 즉시 보내고 나머지를 지연하도록 페이지를 구성하세요. 이렇게 구성하려면 CSS를 두 부분, 즉 콘텐츠 중 ATF 부분의 스타일 지정을 담당하는 인라인 부분과 지연해도 되는 부분으로 분할해야 할 수 있습니다.</p>\n<p>사이트의 로드 속도를 높이기 위해 재구성하는 방법에 관한 다음 예를 고려하세요.</p>\n<ul>\n<li>HTML에서 제3자 위젯을 로드한 후 주요 콘텐츠를 로드하는 경우 주요 콘텐츠를 먼저 로드하도록 순서를 변경합니다.</li>\n<li>사이트에서 탐색 사이드바와 자료가 포함된 2열 디자인을 사용하는데 HTML에서 사이드바를 내용보다 먼저 로드하는 경우 내용을 먼저 로드해 보세요.</li>\n</ul>\n<h5 id=\"2-리소스에서-사용하는-데이터의-양-축소\"><a href=\"#2-%EB%A6%AC%EC%86%8C%EC%8A%A4%EC%97%90%EC%84%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EC%96%91-%EC%B6%95%EC%86%8C\" aria-label=\"2 리소스에서 사용하는 데이터의 양 축소 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 리소스에서 사용하는 데이터의 양 축소</h5>\n<p>사이트를 여러 기기에서 잘 작동하고 중요한 콘텐츠를 먼저 로드하도록 다시 디자인했으면 다음 기술을 사용하여 페이지 렌더링에 필요한 데이터의 양을 줄입니다.</p>\n<ul>\n<li>\n<p>리소스 축소 : 불필요한 공백과 주석을 삭제하면 HTML, CSS, 자바스크립트를 축소할 수 있습니다.</p>\n<ul>\n<li>리소스의 변수 이름을 변경하는 도구를 사용하여 세부적으로 최적화할 수 있습니다.</li>\n</ul>\n</li>\n<li>가능하면 이미지 대신 CSS 사용</li>\n<li>압축 사용</li>\n</ul>\n<h2 id=\"9-렌더링-차단-자바스크립트-삭제\"><a href=\"#9-%EB%A0%8C%EB%8D%94%EB%A7%81-%EC%B0%A8%EB%8B%A8-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%82%AD%EC%A0%9C\" aria-label=\"9 렌더링 차단 자바스크립트 삭제 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>9. 렌더링 차단 자바스크립트 삭제</h2>\n<p>이 규칙은 HTML이 페이지의 스크롤 없이 볼 수 있는 부분에 있는 외부 차단 자바스크립트 파일을 참조하는 것이 PageSpeed Insights에서 감지하면 트리거됩니다.</p>\n<h4 id=\"--개요-4\"><a href=\"#--%EA%B0%9C%EC%9A%94-4\" aria-label=\"  개요 4 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 개요</h4>\n<p>브라우저가 페이지를 렌더링하려면 먼저 HTML 마크업을 파싱하여 DOM을 빌드해야 합니다. 처리되는 동안 파서에서는 스크립트를 발견할 때마다 파싱을 중지하고 스크립트를 실행해야 HTML을 계속 파싱할 수 있습니다. 또한 외부 스크립트의 경우 파서에서는 리소스가 다운로드될 때까지 기다려야 하며, 이로 인해 한 번 이상의 네트워크 왕복이 발생하고 페이지의 첫 렌더링 시간이 지연될 수 있습니다. 자바스크립트가 중요한 렌더링 경로에 어떻게 영향을 미치는지 자세히 알아보려면<a href=\"https://developers.google.com/web/fundamentals/performance/critical-rendering-path/adding-interactivity-with-javascript\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"> 자바스크립트로 상호작용 추가</a>를 참조하세요.</p>\n<ul>\n<li>자바스크립트는 DOM 및 CSSOM을 쿼리하고 수정할 수 있습니다.</li>\n<li>자바스크립트 실행은 CSSOM을 차단합니다.</li>\n<li>자바스크립트는 명시적으로 비동기로 선언되지 않은 경우 DOM 생성을 차단합니다.</li>\n</ul>\n<h4 id=\"--권장사항-4\"><a href=\"#--%EA%B6%8C%EC%9E%A5%EC%82%AC%ED%95%AD-4\" aria-label=\"  권장사항 4 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 권장사항</h4>\n<p>차단 자바스크립트의, 특히 실행하기 전에 가져와야 하는 외부 스크립트의 사용을 피하고 최소화해야 합니다. 추가적인 네트워크 요청을 방지하기 위해 페이지 콘텐츠를 렌더링하는 데 필수적인 스크립트를 인라인으로 삽입할 수도 있지만, 좋은 성능을 내려면 인라인 콘텐츠는 크기가 작아야 하고 빠르게 실행할 수 있어야 합니다. 첫 렌더링에서 중요하지 않은 스크립트는 비동기 스크립트로 생성하거나 첫 번째 렌더링이 완료될 때까지 지연되어야 합니다. 또한 이 경우 로드 시간을 향상하려면 CSS 전송을 최적화 해야 합니다.</p>\n<h4 id=\"--code-classlanguage-text필독사항code\"><a href=\"#--code-classlanguage-text%ED%95%84%EB%8F%85%EC%82%AC%ED%95%ADcode\" aria-label=\"  code classlanguage text필독사항code permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- <code class=\"language-text\">필독사항</code></h4>\n<p>스크립트를 실행하려는 경우 브라우저가 CSSOM을 다운로드하고 빌드하는 작업을 완료하지 않았으면 어떻게 될까요? 답은 간단하지만 성능에는 그다지 좋지 않습니다. <code class=\"language-text\">브라우저가 CSSOM을 다운로드하고 생성하는 작업을 완료할 때까지 스크립트 실행 및 DOM 생성을 지연시킵니다.</code></p>\n<p>간단히 말해서, 자바스크립트에서는 DOM, CSSOM 및 자바스크립트 실행 간에 여러 가지 새로운 종속성을 도입합니다. 이 때문에 브라우저가 화면에서 페이지를 처리하고 렌더링할 때 상당한 지연이 발생할 수 있습니다.</p>\n<ul>\n<li>문서에서 스크립트의 위치는 중요합니다.</li>\n<li>브라우저가 스크립트 태그를 만나면 이 스크립트가 실행 종료될 때까지 DOM 생성이 일시 중지됩니다.</li>\n<li>자바스크립트는 DOM 및 CSSOM을 쿼리하고 수정할 수 있습니다.</li>\n<li>자바스크립트 실행은 CSSOM이 준비될 때까지 일시 중지됩니다.</li>\n</ul>\n<h5 id=\"--script-태그와-인라인-javascript-snippet-차이\"><a href=\"#--script-%ED%83%9C%EA%B7%B8%EC%99%80-%EC%9D%B8%EB%9D%BC%EC%9D%B8-javascript-snippet-%EC%B0%A8%EC%9D%B4\" aria-label=\"  script 태그와 인라인 javascript snippet 차이 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- &#x3C;script> 태그와 인라인 Javascript snippet 차이</h5>\n<p>대부분이 &#x3C;script> 태그를 사용하든 인라인 자바스크립트 스니펫을 사용하든 간에 여러분은 이 둘이 동일한 방식으로 동작할 것으로 기대합니다. 두 경우 모두 브라우저가 일시 중지하고 스크립트를 실행해야만 문서의 나머지 부분을 처리할 수 있습니다.</p>\n<p>하지만, <code class=\"language-text\">외부 자바스크립트 파일의 경우 브라우저가 일시 중지하고 디스크, 캐시 또는 원격 서버에서 스크립트를 가져올 때까지 기다려야 합니다.</code> 이로 인해 주요 렌더링 경로에 수십 ~ 수천 밀리초의 지연이 추가로 발생할 수 있습니다. 이러한 것을 방지하기 위해 비동기로 외부 JS를 로드할 수 있습니다.</p>\n<h5 id=\"--자바스크립트를-code-classlanguage-text비동기asynccode로-생성\"><a href=\"#--%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-code-classlanguage-text%EB%B9%84%EB%8F%99%EA%B8%B0asynccode%EB%A1%9C-%EC%83%9D%EC%84%B1\" aria-label=\"  자바스크립트를 code classlanguage text비동기asynccode로 생성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 자바스크립트를 <code class=\"language-text\">비동기(async)</code>로 생성</h5>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width=device-width,initial-scale=1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>style.css<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Critical Path: Script Async<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Hello <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span>web performance<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span> students!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>awesome-photo.jpg<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>app.js<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">async</span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>위의 예시처럼, <code class=\"language-text\">async</code> 키워드를 스크립트 태그에 추가하면, 스크립트가 사용 가능해질 때까지 기다리는 동안 DOM 생성을 차단하지 말라고 브라우저에 지시하는 것입니다. 이 경우 성능이 크게 향상됩니다.</p>\n<h2 id=\"outro\"><a href=\"#outro\" aria-label=\"outro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Outro</h2>\n<p>개인적으로 웹 개발에서의 가장 큰 어려움은 브라우저 별 차이점에서 발생하는 것 같다고 생각합니다. 하지만, HTTP와 같은 표준을 준수하여 개발한다면 옛 브라우저 외에는 대부분의 브라우저가 표준을 따라가고 있기 때문에 큰 어려움없이 개발 간 문제에 대처할 수 있을것으로 판단합니다.</p>\n<p>특히, Resources를 잘 관리하는 것이 웹 페이지를 최적화하는데 중요한 요소로 보입니다. 또한, 브라우저의 간단한 작동원리를 이해해야 할 필요가 있습니다. CSS 경우는 렌더링 트리를 만들기 위해서 로드 전까지 렌더링을 차단하는, JS는 DOM생성을 차단하는 특징을 확인할 수 있었습니다. 이러한 브라우저의 작동 흐름을 이해한다면 해당 코드들을 분리하고 필요한 경우에 따라서 이를 응용하여 최적화하는데 큰 도움이 될 것으로 생각합니다.</p>\n<p>이번내용은 Frontend 관련 내용이 많다고 생각합니다. Resources 관리부터 압축, 최적화 등 다양한 기능들은 현재 Webpack Bundler를 통해 해결할 수 있습니다. 하지만, 프로젝트가 커지면 분리해야되는 부분이 생기기 때문에 이를 100% 규칙적으로 따라갈수는 없다고 생각합니다. 하지만, 이러한 내용을 숙지한다면 웹 최적화를 고려한 개발할 수 있다고 생각합니다.</p>\n<h2 id=\"references\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<ul>\n<li><a href=\"https://developers.google.com/speed/docs/insights/rules\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google PageSpeed Insights</a></li>\n</ul>","id":"a534dbc6-23ca-56a7-8727-924e19c71b6c","fields":{"slug":"web-웹사이트의-속도를-개선할-수-있는-방법-9-가지-정리-part-2"},"frontmatter":{"date":"2018-04-23T00:00:00.000Z","title":"[Web] 웹사이트의 속도를 개선할 수 있는 방법 9가지 정리 - Part 2","category":"Web","tags":["Web","Optimization","Cache","HTTP","gzip","Priority"],"banner":null},"timeToRead":12},"next":{"excerpt":"오늘 N사 면접을 보면서 개인적으로 몰랐었던 부분을 몇가지 정리하는 시간을 가져볼까 합니다. Spring을 최근에 이용하지 않은지가 반년이 넘어서 가물가물해서 더 어려웠던 면접이었는데요, 변명을 뒤로하고 몰랐던 부분은 알아가는 것이 더 중요한 것이니까, 이번 기회에 관련된 질문에 대해 정리하려합니다. Intro 잘 대답하지 못했던 부분이나 전혀 알지 못했던 3가지를 추려서 정리를 하려고합니다. 3가지는 아래와 같이 선정하였습니다. Spring…","html":"<p>오늘 N사 면접을 보면서 개인적으로 몰랐었던 부분을 몇가지 정리하는 시간을 가져볼까 합니다. Spring을 최근에 이용하지 않은지가 반년이 넘어서 가물가물해서 더 어려웠던 면접이었는데요, 변명을 뒤로하고 몰랐던 부분은 알아가는 것이 더 중요한 것이니까, 이번 기회에 관련된 질문에 대해 정리하려합니다.</p>\n<h2 id=\"intro\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>잘 대답하지 못했던 부분이나 전혀 알지 못했던 3가지를 추려서 정리를 하려고합니다. 3가지는 아래와 같이 선정하였습니다.</p>\n<ul>\n<li>Spring, Bean Scope</li>\n<li>Java Garbage Collector</li>\n<li>\n<p>Log Service Architecture &#x26; Module</p>\n<ul>\n<li>Lambda Architecture</li>\n<li>...</li>\n</ul>\n</li>\n</ul>\n<p>먼저, 작성하고자 하는것은 Spring에서 Bean Scope라는 개념입니다. 개인적으로 Spring의 Bean은 Singleton으로만 알고/사용했었습니다. 필요에 따라 인스턴스가 다를 수 있겠다라는 생각도하여 잘 대답을 못했습니다. 그러나, Bean Scope에 대한 질문의 핵심은 IoC와 DI에 대한 응용질문이라고 생각합니다. Spring은 Container에 의해 Bean을 관리하고 인스턴스화하여 주입하는 것이 기본적인 핵심개념입니다. 여기서 더 나아가 생각하면 해당 Bean을 인스턴스화 할때마다 Singleton이 아닌 다른 방법으로 인스턴스화하는 것이 더 효율일 수 있다는 추론을 할 수 있습니다. (개인적으로 경험해보지는 못했지만, 각 경우에 따라 실행되어야 할 인스턴스가 있을 수 있습니다.) 이러한 상황에 사용되는것이 바로 Bean Scope입니다.</p>\n<h2 id=\"bean-scope란\"><a href=\"#bean-scope%EB%9E%80\" aria-label=\"bean scope란 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bean Scope란?</h2>\n<p>Spring의 Bean Scope는 Spring에서 Bean 생성의 범위를 설정할 수 있도록 만들어준 기능입니다.</p>\n<p>Spring에서 Bean Scope의 기본 설정은 <code class=\"language-text\">singleton</code>으로, 해당 Container 안에서 DI가 일어날 때 scope의 범위를 확인하여 Container에서 인스턴스를 생성합니다. 만약, 해당 Bean에 대해서 Scope를 설정하지 않으면 1개의 인스턴스만 생성하여 사용됩니다. 그 외에 getBean() 메소드를 콜할 때, Request 요청 때, Session을 이용할 때 등 다양한 Scope가 존재합니다. 이와 관련된 Bean Scope 종류에 대해 간단히 알아보겠습니다.</p>\n<h2 id=\"bean-scope-종류\"><a href=\"#bean-scope-%EC%A2%85%EB%A5%98\" aria-label=\"bean scope 종류 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bean Scope 종류</h2>\n<table class=\"table table-dark\">\n  <tr>\n    <th>\n      Scope\n    </th>\n    <th>\n      Description\n    </th>\n  </tr>\n  <tr>\n    <td>\n      singleton\n    </td>\n    <td>\n      단일 Bean 정의를 Spring IoC 컨테이너별로 하나의 객체 인스턴스로 범위 지정한다.\n    </td>\n  </tr>\n  <tr>\n    <td>\n      prototype\n    </td>\n    <td>\n      단일 Bean 정의를 원하는 수의 오브젝트 인스턴스로 확장합니다.\n    </td>\n  </tr>\n  <tr>\n    <td>\n      request\n    </td>\n    <td>\n      단일 Bean 정의를 단일 HTTP 요청의 라이프 사이클 범위로 범위 지정합니다. 즉, 각각의 모든 HTTP 요청은 단일 Bean 정의의 뒤쪽에서 생성 된 자체 Bean 인스턴스를 갖게됩니다. 웹 인식 Spring ApplicationContext의 컨텍스트에서만 유효합니다.\n    </td>\n  </tr>\n  <tr>\n    <td>\n      session\n    </td>\n    <td>\n      단일 Bean 정의를 HTTP 세션의 라이프 사이클 범위로 범위 지정합니다. 웹 인식 Spring ApplicationContext의 컨텍스트에서만 유효합니다.\n    </td>\n  </tr>\n  <tr>\n    <td>\n      global session\n    </td>\n    <td>\n      단일 Bean 정의를 전역 HTTP 세션의 라이프 사이클 범위로 확장합니다. 일반적으로 portlet context에서 사용되는 경우에만 유효합니다. 웹 인식 Spring ApplicationContext의 컨텍스트에서만 유효합니다.\n    </td>\n  </tr>\n    <tr>\n    <td>\n      application\n    </td>\n    <td>\n      단일 Bean 정의를 ServletContext의 라이프 사이클 범위로 범위 지정합니다. 웹 인식 Spring ApplicationContext의 컨텍스트에서만 유효합니다.\n    </td>\n  </tr>\n  </tr>\n    <tr>\n    <td>\n      websocket\n    </td>\n    <td>\n      단일 bean 정의를 WebSocket의 라이프 사이클 범위로 범위 지정합니다. 웹 인식 Spring ApplicationContext의 컨텍스트에서만 유효합니다.\n    </td>\n  </tr>\n</table>\n<h5 id=\"--주의사항\"><a href=\"#--%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD\" aria-label=\"  주의사항 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 주의사항</h5>\n<blockquote>\n<p>request, session, global session, application, websocket의 Scope는 일반 Spring 어플리케이션이 아닌, Spring MVC Web Application에서만 사용되는 용도입니다. 이러한 범위를 벗어나 ClassPathXmlApplicationContext와 같은 일반적인 Spring IoC 컨테이너와 함께 사용하면 알 수 없는 Bean Scope에 대해 IllegalStateException이 발생합니다.</p>\n</blockquote>\n<h2 id=\"singleton\"><a href=\"#singleton\" aria-label=\"singleton permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Singleton</h2>\n<p>Bean의 하나의 인스턴스만 관리되고, 그 Bean 정의와 일치하는 id를 가진 모든 Bean 요청은 Spring 컨테이너에 의해 하나의 인스턴스만을 반환하게 됩니다. 즉, Bean 설정을 정의하고 Singleton으로 범위를 지정하면 Spring IoC 컨테이너는 해당 Bean 객체의 인스턴스 하나만 정확히 생성합니다. <code class=\"language-text\">이 단일 인스턴스는 이러한 Singleton Bean의 캐시에 저장되며 그 이후의 모든 요청 및 참조 된 해당 Bean에 대한 참조로 인해 캐시 된 객체가 반환됩니다.</code></p>\n<h4 id=\"--간단한-사용방법\"><a href=\"#--%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%82%AC%EC%9A%A9%EB%B0%A9%EB%B2%95\" aria-label=\"  간단한 사용방법 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 간단한 사용방법</h4>\n<ul>\n<li>\n<p>Annotation</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>context<span class=\"token punctuation\">.</span>annotation</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Scope</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>springframework<span class=\"token punctuation\">.</span>stereotype</span><span class=\"token punctuation\">.</span><span class=\"token class-name\">Service</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<p>@Service(\"singletonService\")\n@Scope(\"singletone\")\npublic class SingletonService {\n// ...\n}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- XML\n```xml\n&lt;bean id=&quot;singletonService&quot; class=&quot;com.foo.SingletonService&quot;/&gt;\n&lt;bean id=&quot;singletonService&quot; class=&quot;com.foo.SingletonService&quot; scope=&quot;singleton&quot;/&gt;\n&lt;bean id=&quot;singletonService&quot; class=&quot;com.foo.SingletonService&quot; singleton=&quot;true&quot;/&gt;</code></pre></div>\n<p>Annotation을 이용하여 해당 Bean을 등록할 때, 간단하게 스코프를 설정할 수 있습니다. 혹은, XML에 위와 같이 설정할 수 있습니다. 아무설정이 없어도 Default 값이 Singleton이기 때문에 Spring은 해당 Bean을 Singleton으로 생성합니다.</p>\n<h2 id=\"prototpye\"><a href=\"#prototpye\" aria-label=\"prototpye permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prototpye</h2>\n<p>Bean 구현의 non-singleton, Prototype 범위는 특정 Bean에 대한 요청이 만들어 질 때마다 즉, 다른 Bean에 주입되거나 프로그래밍 방식의 getBean() 메소드를 통해 요청 될 때마다 새로운 Bean 인스턴스를 컨테이너에 요청하여 생성합니다. 일반적으로 상태 기반 Bean에 대해서는 Prototype Bean을 사용하고 상태없는 Bean에는 Singleton Scope를 사용해야합니다. (개인적으로 이부분이 어려운데, 해당 Bean이 상태값을 가지고 있어 고유한 값이 필요할 경우 Prototype을 사용하는 것이 좋다는 것으로 해석됩니다.)</p>\n<p>Prototype Scope는 다른 Scope와 달리 Spring Container에서 라이프 사이클을 관리하지 않습니다. 즉, 컨테이너는 Prototype 객체의 인스턴스화, 구성 및 어셈블 한 다음 Prototpye 인스턴스를 더 이상 기록하지 않고 클라이언트에 전달합니다. 즉, 클라이언트 코드는 Prototype Scope 객체를 정리하고 Prototype Bean이 보유하고있는 값 비싼 리소스를 제거해야합니다. Spring 컨테이너가 프로토 타입 범위의 빈에 의해 보유 된 리소스를 해제하려면 <a href=\"https://docs.spring.io/spring/docs/4.3.9.RELEASE/spring-framework-reference/html/beans.html#beans-factory-extension-bpp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Customizing beans using a BeanPostProcessor</a>를 참조하시기 바랍니다.</p>\n<h4 id=\"--prototype을-singleton과-함께-사용-할-경우-주의사항\"><a href=\"#--prototype%EC%9D%84-singleton%EA%B3%BC-%ED%95%A8%EA%BB%98-%EC%82%AC%EC%9A%A9-%ED%95%A0-%EA%B2%BD%EC%9A%B0-%EC%A3%BC%EC%9D%98%EC%82%AC%ED%95%AD\" aria-label=\"  prototype을 singleton과 함께 사용 할 경우 주의사항 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Prototype을 Singleton과 함께 사용 할 경우 주의사항</h4>\n<p>Prototype Bean에 종속성이 있는 Singleton Scope Bean을 사용하는 경우 인스턴스화시 종속성이 해결된다는 점에 유의하십시오. 따라서 Prototype 범위의 Bean을 Singleton 범위의 Bean에 종속성을 주입하면 새로운 Prototype Bean이 인스턴스화 된 Singleton Bean에 종속성이 주입됩니다. Prototype 인스턴스는 Singleton Scope의 빈에 제공되는 유일한 인스턴스입니다.</p>\n<p>그러나, Single Scope의 Bean이 Prototype Scope의 Bean의 새로운 인스턴스를 런타임 마다 반복적으로 획득하기를 원할 때 문제가 발생합니다. 왜냐하면, Spring 컨테이너가 Singleton Bean을 인스턴스화하고 Prototype Scope의 Bean의 의존성을 해결하고 주입 할 때, Prototype의 Bean 인스턴스화는 한 번만 발생하기 때문입니다.</p>\n<p><code class=\"language-text\">즉, 런타임에 Prototype Bean의 새로운 인스턴스가 두 번 이상 필요할 경우, 해결책은 IoC를 수동적으로 통제하는 것입니다.</code> 예로, ApplicationContextAware 인터페이스를 구현하여 컨테이너가 이를 인식하게 만든 뒤, Singleton Bean(A)이 의존성이 주입된 Prototype Scope(B)의 Bean을 필요로 할 때마다 컨테이너에 대한 getBean('B') 호출로 Bean B 새로운 인스턴스를 요청할 수 있습니다.</p>\n<p>이와 관련된 자세한 방법은 <a href=\"https://docs.spring.io/spring/docs/4.3.9.RELEASE/spring-framework-reference/html/beans.html#beans-factory-method-injection\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Method injection</a>을 참조하면 도움이 될 것으로 생각합니다.</p>\n<h2 id=\"request\"><a href=\"#request\" aria-label=\"request permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Request</h2>\n<p><code class=\"language-text\">Spring 컨테이너는 각 HTTP 요청마다 request Bean으로 정의된 Bean을 새로운 인스턴스로 생성합니다.</code> 즉, 아래 예제를 이용하면 requestAction Bean의 범위는 HTTP 요청 레벨로 지정(한정)됩니다. 동일한 requestAction Bean 정의에서 작성된 다른 인스턴스는 상태에서 이러한 변경 사항을 볼 수 없기 때문에 원하는만큼 작성된 인스턴스의 내부 상태를 변경할 수 있습니다. 그것들은 개별 요청에 특정적입니다. <code class=\"language-text\">요청이 처리를 완료하면 요청에 적용되는 Bean은 삭제됩니다.</code></p>\n<p>Annotation 또는 Java Config를 사용하는 경우 <code class=\"language-text\">@RequestScope</code> Annotation을 사용하여 요청 범위에 구성 요소를 할당 할 수 있습니다.</p>\n<h4 id=\"--간단한-사용방법-1\"><a href=\"#--%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%82%AC%EC%9A%A9%EB%B0%A9%EB%B2%95-1\" aria-label=\"  간단한 사용방법 1 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 간단한 사용방법</h4>\n<ul>\n<li>\n<p>Annotation</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RequestScope</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RequestAction</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>XML</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>requestAction<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.foo.RequestAction<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scope</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>request<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"session\"><a href=\"#session\" aria-label=\"session permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Session</h2>\n<p><code class=\"language-text\">Spring 컨테이너는 단일 HTTP 세션의 유효 기간 동안 sessionAction Bean 정의를 사용하여 SessionAction bean의 새로운 인스턴스를 생성합니다.</code> 즉, sessionAction Bean은 HTTP Session 레벨에서 유효 범위가 지정됩니다. 요청 범위 Bean과 마찬가지로 원하는만큼 생성 된 인스턴스의 내부 상태를 변경할 수 있습니다. 하지만, 동일한 sessionAction Bean을 정의에서 생성 된 인스턴스들은 다른 HTTP Session 인스턴스가 이러한 변경 상태를 인식하지 못합니다. <code class=\"language-text\">이는 개별 HTTP 세션에 고유하기 때문입니다. 즉, HTTP 세션이 결국 만료(폐기)되면 해당 특정 HTTP 세션으로 범위가 지정된 Bean도 삭제됩니다.</code></p>\n<p>주석 기반 구성 요소 또는 Java Config를 사용하는 경우 @SessionScope 주석을 사용하여 세션 범위에 구성 요소를 할당 할 수 있습니다.</p>\n<h4 id=\"--간단한-사용방법-2\"><a href=\"#--%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%82%AC%EC%9A%A9%EB%B0%A9%EB%B2%95-2\" aria-label=\"  간단한 사용방법 2 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- 간단한 사용방법</h4>\n<ul>\n<li>\n<p>Annotation</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SessionScope</span>\n<span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SessionAction</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>XML</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>bean</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sessionAction<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>com.foo.SessionAction<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scope</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>session<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"outro\"><a href=\"#outro\" aria-label=\"outro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Outro</h2>\n<p>Bean Scope가 중요한 이유는, Spring의 IoC(Inversion of Control)라는 핵심 개념때문입니다. Spring을 이용하면 개발자가 어플리케이션에 필요한 메모리를 관리해야하는 부분이 거의 존재하지 않습니다. 하지만, 이러한 장점은 개발자에게 단점으로 작용할 수 있습니다. 간단한 예로, 해당 Bean을 특정한 경우에만 인스턴스화하고 싶을 경우입니다. 해당 Bean 인스턴스에 대한 상태 값 같은 것을 포함하여 해당 인스턴스에 대한 변화값을 추적해야 할 경우가 Bean Scope가 필요한 경우라고 말할 수 있습니다.</p>\n<p>또한, 위에서도 언급했지만 Prototype Bean을 Singleton Bean의 주입하여 이용할 경우 IoC가 이를 알 수 없어 개발자가 직접 Context에 명시하여 해당 인스턴스를 관리해야 합니다. 이러한 경우 필요한 것이 BeanPostProcessor, ApplicationContextAware 등과 같은 인터페이스입니다. 여기서 중요한 것은 IoC의 개념과 장단점을 이해하여 왜 이러한 구현체(인터페이스)가 필요한지를 이해한다면 Spring을 더 잘 이용할 수 있다고 생각합니다.</p>\n<p>결론적으로, 이번 정리를 통해 Bean Scope에 대해 답한다면 <code class=\"language-text\">Spring Bean Scope는, 해당 Bean이 필요에 따라 인스턴스화할 수 있게 만들어 효과적인 메모리를 관리를 가능하게 만드는 기능</code>이라고 말할 것 같습니다. 이상 부족한 글을 마치고자 합니다.</p>\n<p>간단히 Spring Scope에 대해 정리해보려고 했지만, 간단한 키워드로는 용도를 추론해내는데 어려움이 스프링 문서를 기반으로 정독하면서 알아보았습니다. 또한, Bean이란 개념 자체가 Spring에 IoC, DI와 같은 핵심개념과 밀접한 개념이기 때문에 이와 관련한 내용에 대한 이해가 선행되어야 되기때문에 자세히 들어갈수록 많은 어려움이 있었습니다. 부족한 것은 차차 수정하면서 해결하겠습니다.</p>\n<h2 id=\"references\"><a href=\"#references\" aria-label=\"references permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>References</h2>\n<ul>\n<li><a href=\"https://docs.spring.io/spring/docs/4.3.9.RELEASE/spring-framework-reference/html/beans.html#beans-factory-scopes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Spring Reference 4.3.9 Release</a></li>\n<li><a href=\"https://www.slipp.net/wiki/pages/viewpage.action?pageId=25528177\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Java Slipp - Bean Scope</a></li>\n</ul>","id":"78d0ce1e-65bc-5aeb-bc76-e62439459154","fields":{"slug":"spring-java-spring-bean-scope는-무엇인가"},"frontmatter":{"date":"2018-04-25T00:00:00.000Z","title":"[Spring/Java] Spring Bean Scope는 무엇인가?","category":"Spring","tags":["Spring","Java","Bean","Scope","Singleton","Prototype"],"banner":null},"timeToRead":7}}}}