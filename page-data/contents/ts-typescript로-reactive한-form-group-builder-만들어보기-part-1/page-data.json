{"componentChunkName":"component---src-templates-post-tsx","path":"/contents/ts-typescript로-reactive한-form-group-builder-만들어보기-part-1","result":{"data":{"markdownRemark":{"html":"<h2 id=\"intro\" style=\"position:relative;\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>개인적으로 Typescript를 상당히 애용합니다. Bundler와 같이사용하면, Javascript에 다양한 모듈을 만들어 줄 수 있으며, 타입을 명시해줌으로써 함수와 객체에 대한 정의를 더 쉽게 할 수 있기 때문입니다.\n당연히 기존 Script의 언어 장점을 잃어버리는 측면도 있습니다. 하지만, 이미 번들러를 통해서 ES5까지 호환할 수 있는 스크립트를 만들 수 있으며, TS-Compiler를 통해서 사전에 코드 에러를 방지할 수 있습니다.</p>\n<img src='/assets/images/contents/2019/ts-es6.png' width='100%' height='100%'>\n<p>또한, 워낙 위처럼 유명한 이미지처럼, Typescript는 이미 대부분의 Javascript의 기능들을 호환할 수 있게 만들수 있습니다. 특히, JS로만 개발하면 Typescript의 유저가 해당 모듈을 사용할 때, type경고 및 에러 등으로 사용이 원활하지 않게되는 경우가 있습니다. 이럴 때, type만 declare하는 경우도 있지만 typescript로 초기부터 개발하면 2개의 언어(사실 모두 JS)를 모두 쉽게 커버할 수 있습니다.</p>\n<h2 id=\"pre-requirement\" style=\"position:relative;\"><a href=\"#pre-requirement\" aria-label=\"pre requirement permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pre-requirement</h2>\n<ul>\n<li>\n<p>Typescript</p>\n<ul>\n<li>ES6</li>\n</ul>\n</li>\n</ul>\n<p>기존에 작성된 JS코드를 TS로 변경하여 재작성 할 예정입니다. Jest를 이용하여 테스트로 코드의 유효성을 확인해볼 것입니다.</p>\n<h2 id=\"goals\" style=\"position:relative;\"><a href=\"#goals\" aria-label=\"goals permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Goals</h2>\n<p>JS로 만들어진 내용이 있기 때문에 해당 내용을 기반으로 JavaScript와 TypeScript를 비교하면서 무엇이 다른지에 중점을 두어 작성해보겠습니다.\n이마 크게 달라진 것은 없을 것입니다. 결국 JS기 떄문에, Type이 있냐 없냐로 인한 메카니즘 차이이지 그 코어에 해당되는 메카니즘은 같기 때문입니다.</p>\n<h2 id=\"1-build--set-properties\" style=\"position:relative;\"><a href=\"#1-build--set-properties\" aria-label=\"1 build  set properties permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Build &#x26; Set Properties</h2>\n<p>Typescript에서는 Javascript와 다르게 각각의 Type만 선언하면 그 값을 컴파일 단계에서 확인 할 수 있습니다. 즉, 서비스 레벨에서 잘못 들어오는 값의 유효성 처리는 필요하겠지만, 개발단계에서의 오류는 개발 단계에서 오류/경고 처리를 할 수 있어 쉽게 해결할 수 있다는 것입니다. </p>\n<p>즉, Javascript</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// Validation 처리에 필요한 구조 값</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ValidationResponse</span> <span class=\"token punctuation\">{</span>\n  hasError<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// UI에 사용되는 Form Value 타입</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormBuilderValues</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  hasError<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  message<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormBuilderProperties</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FormBuilderValues</span> <span class=\"token punctuation\">{</span>\n  key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  htmlFor<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">type</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  isRequired<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  requiredMessage<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  isFocus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  onValidation<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">boolean</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ValidationResponse<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormBuilderOptions</span> <span class=\"token punctuation\">{</span>\n  onGroupValidation<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ValidationResponse<span class=\"token punctuation\">;</span>\n  isOnCreatedValidation<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  isOnChangeValidation<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormBuildeProps</span> <span class=\"token punctuation\">{</span>\n  properties<span class=\"token operator\">:</span> FormBuilderProperties<span class=\"token punctuation\">;</span>\n  options<span class=\"token operator\">:</span> FormBuilderOptions<span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">handleOnValidation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> FormBuilder<span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">setProperties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">Properties</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> FormBuilder<span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">setValue</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> FormBuilder<span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">getPropertyValueBy</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">keyName<span class=\"token operator\">:</span> <span class=\"token keyword\">keyof</span> FormBuilderProperties</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">getProperties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> FormBuilderProperties<span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">getValues</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> FormBuilderValues<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>JS에서는 PropsTypes를 사용하지는 않았습니다. 해당 라이브러리를 사용하는 것이 더 좋을것으로 판단되지만, 결국, 해당 타입을 확인한다는 의미를 두었기 때문입니다.\n즉, 라이브러리를 배제한 JS와 TS를 비교하기 위해 해당 영역을 JS에서 더 Raw하게 적었다고 느끼실 수 있습니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">ValidationResponse</span> <span class=\"token punctuation\">{</span>\n  hasError<span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  message<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormBuilderValues</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  hasError<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  message<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormBuilderProperties</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FormBuilderValues</span> <span class=\"token punctuation\">{</span>\n  key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  htmlFor<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">type</span><span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  isRequired<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  requiredMessage<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  isFocus<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  onValidation<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">boolean</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ValidationResponse<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormBuilderOptions</span> <span class=\"token punctuation\">{</span>\n  onGroupValidation<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> ValidationResponse<span class=\"token punctuation\">;</span>\n  isOnCreatedValidation<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  isOnChangeValidation<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">FormBuildeProps</span> <span class=\"token punctuation\">{</span>\n  properties<span class=\"token operator\">:</span> FormBuilderProperties<span class=\"token punctuation\">;</span>\n  options<span class=\"token operator\">:</span> FormBuilderOptions<span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">handleOnValidation</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">?</span><span class=\"token operator\">:</span> <span class=\"token builtin\">any</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> FormBuilder<span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">setProperties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">Properties</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> FormBuilder<span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">setValue</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> FormBuilder<span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">getPropertyValueBy</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">keyName<span class=\"token operator\">:</span> <span class=\"token keyword\">keyof</span> FormBuilderProperties</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">getProperties</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> FormBuilderProperties<span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">getValues</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> FormBuilderValues<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">FormBuilder</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">FormBuildeProps</span> <span class=\"token punctuation\">{</span>\n  properties<span class=\"token operator\">:</span> FormBuilderProperties<span class=\"token punctuation\">;</span>\n  options<span class=\"token operator\">:</span> FormBuilderOptions<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">properties<span class=\"token operator\">:</span> FormBuilderProperties<span class=\"token punctuation\">,</span> options<span class=\"token operator\">:</span> FormBuilderOptions</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> formProperties <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_initForm</span><span class=\"token punctuation\">(</span>properties<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties <span class=\"token operator\">=</span> formProperties<span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options <span class=\"token operator\">=</span> formProperties<span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">private</span> _initForm <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Values</span>\n      htmlFor<span class=\"token punctuation\">,</span>\n      key<span class=\"token punctuation\">,</span>\n      value <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token string\">'text'</span><span class=\"token punctuation\">,</span>\n      hasError <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      message <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      isRequired <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      requiredMessage <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      isFocus <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// Events</span>\n      <span class=\"token function-variable function\">onValidation</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        message<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> FormBuilderProperties<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token function-variable function\">onGroupValidation</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">currentKey<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n        message<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      isOnCreatedValidation <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      isOnChangeValidation <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> FormBuilderOptions<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> isValidObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      hasError<span class=\"token punctuation\">,</span>\n      message<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isOnCreatedValidation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      isValidObject <span class=\"token operator\">=</span> <span class=\"token function\">onValidation</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> properties <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      htmlFor<span class=\"token punctuation\">,</span>\n      key<span class=\"token punctuation\">,</span>\n      value<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">type</span><span class=\"token punctuation\">,</span>\n      hasError<span class=\"token operator\">:</span> isValidObject<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> isValidObject<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span>\n      isRequired<span class=\"token punctuation\">,</span>\n      requiredMessage<span class=\"token punctuation\">,</span>\n      isFocus<span class=\"token punctuation\">,</span>\n      onValidation<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      isOnCreatedValidation<span class=\"token punctuation\">,</span>\n      isOnChangeValidation<span class=\"token punctuation\">,</span>\n      onGroupValidation<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      properties<span class=\"token punctuation\">,</span>\n      options<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// tslint:disable-next-line:variable-name</span>\n  <span class=\"token function-variable function\">handleOnValidation</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>isRequired <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        hasError<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        message<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>requiredMessage<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> isValidObject <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span><span class=\"token function\">onValidation</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>isValidObject<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleOnGroupValidation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">handleOnGroupValidation</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">currentKey</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span><span class=\"token function\">onGroupValidation</span><span class=\"token punctuation\">(</span>currentKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">setProperties</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newProperties</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">...</span>newProperties<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>options<span class=\"token punctuation\">.</span>isOnChangeValidation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">handleOnValidation</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      value<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/**\n   * Finished Methods\n   */</span>\n  <span class=\"token function\">getValidation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> ValidationResponse <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      hasError<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>hasError<span class=\"token punctuation\">,</span>\n      message<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getPropertyValueBy</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propertyKey<span class=\"token operator\">:</span> <span class=\"token keyword\">keyof</span> FormBuilderProperties</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">[</span>propertyKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">getValues</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> FormBuilderValues <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> value<span class=\"token punctuation\">,</span> hasError<span class=\"token punctuation\">,</span> message <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>properties<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      value<span class=\"token punctuation\">,</span>\n      hasError<span class=\"token punctuation\">,</span>\n      message<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> FormBuilder<span class=\"token punctuation\">;</span></code></pre></div>","fields":{"slug":"ts-typescript로-reactive한-form-group-builder-만들어보기-part-1"},"frontmatter":{"title":"[TS] Typescript로 Reactive한 FormGroup Builder 만들어보기 - Part 1","author":"Seolhun","subTitle":"Create a form group.","banner":"/assets/covers/typescript.png","category":"TS","tags":["TS","Form","FormGroup"],"date":"2020.09.25"},"excerpt":"Intro 개인적으로 Typescript를 상당히 애용합니다. Bundler와 같이사용하면, Javascript에 다양한 모듈을 만들어 줄 수 있으며, 타입을 명시해줌으로써 함수와 객체에 대한 정의를 더 쉽게 할 수 있기 때문입니다.\n당연히 기존 Script…","timeToRead":4}},"pageContext":{"slug":"ts-typescript로-reactive한-form-group-builder-만들어보기-part-1","prev":{"excerpt":"안녕하세요. 설훈입니다. 이렇게 만나뵙게 되어 영광입니다. :) 최근 들어 슬럼프를 잘 이겨내면서 많은 성장을 할 수 있었습니다. 이번 전환점을 계기로 오랜만에 글을 다시 써보고자 합니다. 현재 새로운 회사에서 e-Sports 서비스를 개발 중입니다. 첫 Sports 장르 서비스를 개발하면서, 몇몇 도전적인 문제들을 해결하고 있습니다. 특히, Kubernetes로 FrontEnd Micro-Service…","fields":{"slug":"about-seolhun"},"frontmatter":{"author":"Seolhun","banner":null,"category":"about","date":"2020.06.06","subTitle":"About Me","tags":null,"title":"About Seolhun"},"html":"<h2 id=\"안녕하세요-설훈입니다\" style=\"position:relative;\"><a href=\"#%EC%95%88%EB%85%95%ED%95%98%EC%84%B8%EC%9A%94-%EC%84%A4%ED%9B%88%EC%9E%85%EB%8B%88%EB%8B%A4\" aria-label=\"안녕하세요 설훈입니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>안녕하세요. 설훈입니다.</h2>\n<p>이렇게 만나뵙게 되어 영광입니다. :)</p>\n<p>최근 들어 슬럼프를 잘 이겨내면서 많은 성장을 할 수 있었습니다. 이번 전환점을 계기로 오랜만에 글을 다시 써보고자 합니다.</p>\n<p>현재 새로운 회사에서 e-Sports 서비스를 개발 중입니다. 첫 Sports 장르 서비스를 개발하면서, 몇몇 도전적인 문제들을 해결하고 있습니다. 특히, Kubernetes로 FrontEnd Micro-Service 설계하면서 많은 것을 배우고 성장하고 있습니다.\n또한, 면접할 기회가 생겨서 다양한 사람들과 소통하고 토론하 ㄹ수 있어서 해당 기회만을 통해서도 더 성장하고 있습니다. 면접 방식은 주로 토론을 통해 주장과 근거, 설득의 과정을 주로하여 개발적인 이야기를 나누고 있습니다.\n개인적으로 토론문화가 개발자에게 상당히 중요하다고 생각하여 이렇게 진행하고 있습니다. 토론을 통해 여러가지 사고릐 폭을 넓힐 수 있으며, 개발자에게 필요한 논리와 설득의 과정을 체득할 수 있기 때문입니다.\n다양한 사람들과 함께 성장의 기회를 나누는 시간이 되었으면 합니다.</p>\n<p>최근에는 제 코드를 하나하나 다시 뜯어가며 고쳐나가고 있습니다. 과거 너무 많은 코드들을 만들어서 이를 다시 정리하고 개선해나가고 있습니다.\n그 중 하나가 블로그(<code class=\"language-text\">seolhun.github.io</code>) 운영이 미흡했던 점을 고쳐나가고 있습니다. 이와 더불어 블로그에 이용한 개인적인 UI <code class=\"language-text\">localize-components</code>의 설계를 바꾸어서 같이 적용하고자 노력 중 입니다.</p>\n<p>앞으로 최소 3년간은 Typescript(Javascript)와 React를 지속해 나갈 것이며, NodeJS도 지속할 것입니다. 시간이 된다면 Go를 통해서도 동시성을 갖춘 서비스를 만들기 위해 노력하고자 합니다.\n좋은 프론트엔드 엔지니어가 단기간의 목표지만, 장기간의 목표는 훌륭한 엔지니어이기 때문에, 언어에 구분을 두고자 하지 않습니다. 이와 더불어 의사소통 능력을 기르고자 노력하고 있습니다. 블로그가 도움이 될 것이라고 믿고있습니다.</p>\n<p>여러가지 의견들에 대해서 소통공간을 열 수 있는 블로그를 만들고자하니, 필요한 부분들은 망설임 없이 토론할 수 있으면 좋겠습니다.\n감사합니다. 설훈 드림.</p>\n<h3 id=\"mission\" style=\"position:relative;\"><a href=\"#mission\" aria-label=\"mission permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mission</h3>\n<p>Cook data, Share it and Grow All Together</p>\n<p>데이터를 여러 사람들과 공유하고 나누어 함께 성장하는 플랫폼을 만들고자 합니다. 거창한 것이 아닌 작은 것부터 시작하고자 합니다.</p>\n<h2 id=\"이력서-및-경력---더-보기\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%A0%A5%EC%84%9C-%EB%B0%8F-%EA%B2%BD%EB%A0%A5---%EB%8D%94-%EB%B3%B4%EA%B8%B0\" aria-label=\"이력서 및 경력   더 보기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이력서 및 경력 - <a href=\"/files/seolhun_resume.pdf\">더 보기</a></h2>","id":"794d5c3d-5ed4-5d69-abb3-40365a7e37a7","timeToRead":1},"next":null}}}