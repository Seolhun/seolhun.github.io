{"componentChunkName":"component---src-templates-blog-tsx","path":"/contents/11","webpackCompilationHash":"4997b7718526a520df97","result":{"data":{"allMarkdownRemark":{"totalCount":65,"edges":[{"node":{"fields":{"slug":"typescript-namespace란"},"frontmatter":{"title":"[Typescript] Namespace란?","date":"2018.03.08","category":"Typescript","tags":["Javascript","Typescript","Namespace","Declare","Module"],"banner":"/assets/covers/typescript.png"},"excerpt":"Typescript의 라이브러리 모듈을 사용하다보면은 namespace를 자주 접하게 됩니다. 해당 module을 만들 수 있도록 도와주는 namespace에 대해 간단히 공부했습니다. Overview…","timeToRead":3}},{"node":{"fields":{"slug":"javascript-typescript-module-pattern이란"},"frontmatter":{"title":"[Javascript/Typescript] Module Pattern이란?","date":"2018.03.05","category":"Javascript","tags":["Javascript","Typescript","Module","Pattern"],"banner":"/assets/covers/js.png"},"excerpt":"Module Pattern을 공부하면서 Module Javascript의 new에 대한 개념을 더 정확히 알아야된다고 생각하여 작성하게 되었습니다. Intro 모듈 패턴은 전통적인 소프트웨어 공학에서 클래스 사용에 private 과 public…","timeToRead":3}},{"node":{"fields":{"slug":"javascript-typescript-prototype이란"},"frontmatter":{"title":"[Javascript/Typescript] Prototype이란?","date":"2018.03.05","category":"Javascript","tags":["Prototype","Javascript","Typescript","Class","Module"],"banner":"/assets/covers/js.png"},"excerpt":"Typescript의 Class를 사용하면서 Javascript의 Prototype에 대한 개념이 중요할 것으로 판단했습니다. 그리고, Javascript의 Module Pattern을 공부하면서 Typescript의 접근제한자 개념이 어떻게 작동되는지에 대해서 알아보고자 합니다. Prototype Link와 Prototype Object…","timeToRead":4}},{"node":{"fields":{"slug":"jenkins-ci-continuous-integration-with-jenkins-and-github-알아보고-예제-작성하기-1"},"frontmatter":{"title":"[Jenkins/CI] Continuous Integration with Jenkins and Github 알아보고 예제 작성하기 - 1","date":"2018.03.02","category":"Jenkins","tags":["CI","Jenkins","Test","Pipeline","Devops"],"banner":"/assets/covers/jenkins.png"},"excerpt":"Continuous Integration doesn’t get rid of bugs, but it does make them dramatically easier to find and remove. - Martin Fowler CI 툴을 이용한다는 것은 위 인용한 글 처럼, 손 쉽게 버그를 찾고 제거하기 위함일 것입니다. 이를 위한 CI 과정과 Jenkins…","timeToRead":20}},{"node":{"fields":{"slug":"javascript-typescript-static이란"},"frontmatter":{"title":"[Javascript/Typescript] Static이란?","date":"2018.02.27","category":"Javascript","tags":["Prototype","Javascript","Typescript","Class","Module"],"banner":"/assets/covers/js.png"},"excerpt":"Singleton Pattern을 구현하면서 static이 Javascript에서는 어떻게 작동되는지 궁금하여 간단히 알아보았습니다. Goal 의 작동원리와 활용법 이해 Typescript와 Javascript의 코드 차이를 이해한다. Overview…","timeToRead":1}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":5,"skip":50,"totalPages":13,"currentPage":11}}}