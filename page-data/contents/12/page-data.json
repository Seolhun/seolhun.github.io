{"componentChunkName":"component---src-templates-blog-tsx","path":"/contents/12","webpackCompilationHash":"f5ffc0169e9a43b261a9","result":{"data":{"allMarkdownRemark":{"totalCount":66,"edges":[{"node":{"fields":{"slug":"typescript-singleton-pattern이란"},"frontmatter":{"title":"[Typescript] Singleton Pattern이란?","date":"2018.02.27","category":"Javascript","tags":["Typescript","Singleton","Static","Private"],"banner":"/assets/covers/js.png"},"excerpt":"디자인 패턴의 Singleton Pattern에 대해서 간단히 정리해보았습니다. Singleton이란 싱글턴 패턴(Singleton pattern)을 따르는 클래스는, 생성자가 여러 차례 호출되더라도 실제로 생성되는 객체는 하나이고 최초 생성 이후에 호출된 생성자는 최초의 생성자가 생성한 객체를 리턴한다. 이와 같은 디자인 유형을 싱글턴 패턴이라고 한다. 주로 공통된 객체를 여러개 생성해서 사용하는 DBCP(DataBase Connection Pool…","timeToRead":2}},{"node":{"fields":{"slug":"javascript-typescript-static이란"},"frontmatter":{"title":"[Javascript/Typescript] Static이란?","date":"2018.02.27","category":"Javascript","tags":["Prototype","Javascript","Typescript","Class","Module"],"banner":"/assets/covers/js.png"},"excerpt":"Singleton Pattern을 구현하면서 static이 Javascript에서는 어떻게 작동되는지 궁금하여 간단히 알아보았습니다. Goal 의 작동원리와 활용법 이해 Typescript와 Javascript의 코드 차이를 이해한다. Overview 정적 메서드는 클래스의 인스턴스 없이 호출이 가능하며 클래스가 인스턴스화되면 호출할 수 없다. 정적 메서드는 종종 어플리케이션의 유틸리티 함수를 만드는데 사용된다. Content…","timeToRead":1}},{"node":{"fields":{"slug":"javascript-typescript-javascript-new-constructor란"},"frontmatter":{"title":"[Javascript/Typescript] Javascript new, constructor란?","date":"2018.02.27","category":"Javascript","tags":["New","Constructor","Singleton"],"banner":"/assets/covers/js.png"},"excerpt":"Singleton 디자인 패턴을 사용하면서 Javascript의 new에 대한 개념을 더 정확히 알아야된다고 생각하여 작성하게 되었습니다. Goal  생성자의 작동원리와 활용법 이해 Typescript와 Javascript의 코드 차이를 이해한다. Overview 클래스에는 'constructor'라는 이름을 가진 특별한 메소드를 하나씩 가질 수 있습니다. 하나 이상의 생성자 메소드가 발견되면 SyntaxError 에러가 발생합니다. 생성자 메서드는 class를 상속받아 구현하였을 시, 'super…","timeToRead":2}},{"node":{"fields":{"slug":"js-vue-vue-study를-통한-문법-및-예제-만들기-part-1"},"frontmatter":{"title":"[JS/Vue] Vue Study를 통한 문법 및 예제 만들기 - Part 1","date":"2017.11.09","category":"Javascript","tags":["Javascript","Vue"],"banner":"/assets/covers/vue.png"},"excerpt":"이번에는 이전 Vue Study 간 정리한 내용을 블로그에 다시 정리하여 올려보겠습니다.\n개인적으로 Vue의 data, method, computed처럼 직관적으로 기능과 이름이 고정되어 코딩하는 것을 좋아합니다. 같은 것을 공유할 수도 있고 코딩 스타일도 구조에 맞게 구성되어 큰 어려움 없이 개발할 수 있기 때문입니다. 총 3번의 정리한 내용들을 이번 블로그를 통해서 나눠보겠습니다. Original Repository : Day 1:Vue-Example By Seolhun - Contet List Build Example…","timeToRead":12}},{"node":{"fields":{"slug":"aws-aws-products에-대한-내용-간단히-정리하기"},"frontmatter":{"title":"[AWS] AWS Products에 대한 내용 간단히 정리하기","date":"2017.10.12","category":"AWS","tags":["AWS","EC2","S3","Kinesis","Products"],"banner":"/assets/covers/aws.png"},"excerpt":"이번에는 AWS를 사용하기 전에 필요한  조사하면서 간단히 정리한 글입니다. EC2, S3 등 기본적인 서비스들은 알고 있었지만 개발을 위해 더 필요한 서비스들이 무엇이 있는지 궁금하여 간단히 정리하였습니다. AWS 공식 홈페이지에 이미 잘 정리되어있지만, 개인적으로 관심 있는 기술들을 정리하였습니다. Server 1. EC2(Elastic Compute Cloud) Amazon Elastic Compute Cloud(EC…","timeToRead":25}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":5,"skip":55,"totalPages":14,"currentPage":12}}}