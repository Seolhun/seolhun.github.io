{"componentChunkName":"component---src-templates-category-tsx","path":"/categories/story","webpackCompilationHash":"f8bd22dd6ef992bcbf49","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"posts":[{"excerpt":"Intro…","html":"<h2 id=\"intro\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>아는 지인분에게 아래와 같은 질문을 받았습니다.\n참으로 어려운 질문이었습니다. 피부로 느낀것도 많고, 생각은 많았지만 정말 생각하고 누군가에게 전달할 만큼의 공감이되었는지, 스스로 위 질문에 대해서 실천하고 있는지에 대한 회고시간이 필요하다고 느꼈기 때문입니다.</p>\n<p>결론을 얘기하면, 저도 너무 부족하여 같이 실천했으면 좋겠고, 이러한 것이 아쉬웠고 같이 해결해나갔으면 좋겠다는 방향으로 의견을 공유해주었습니다.\n그러한 답변을 주는데도 한달이 넘게 지연되다가 마음의 결단을 먹고 30분 넘게 감정적으로 글을 쑤며 수정을 반복하여서 이번글을 공유해보고자 합니다.</p>\n<ol>\n<li>단위 테스트를 얼마나 실천하고 있나요?</li>\n<li>디자인 패턴을 얼마나 실천하고 있나요?</li>\n<li>회사 단위로 정립된, 혹은 추천하는 디버깅 방법론이 있나요?</li>\n<li>스프린트, 스크럼 등의 방법론을 사용하나요? 어느 상황에, 어떤 기간에, 왜, 어떻게 사용하나요?</li>\n<li>페어프로그래밍을 실천하나요? 어느 상황에, 어떤 기간에, 왜, 어떻게 실천하나요?</li>\n</ol>\n<p>질문은 이렇게 나눌 수 있을 것 같습니다. 다만, 저도 팀에 개발자였을뿐 회사의 CTO 혹은 PM, PL이 되보지 못해서 위의 자세한 설명은 못드릴것 같습니다. 질문에 대한 개인적인 경험을 배경으로 답변드리겠습니다.\n일반화로 절대 해석해주지 마시고, 아마 문화를 만들고 회사를 고를 때 참고가 되었으면 하는 바람입니다. 체크리스트도 같이 공우드리겠습니다.</p>\n<h2 id=\"1-단위-테스트를-얼마나-실천하고-있나요\"><a href=\"#1-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%96%BC%EB%A7%88%EB%82%98-%EC%8B%A4%EC%B2%9C%ED%95%98%EA%B3%A0-%EC%9E%88%EB%82%98%EC%9A%94\" aria-label=\"1 단위 테스트를 얼마나 실천하고 있나요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 단위 테스트를 얼마나 실천하고 있나요?</h2>\n<p>단위테스트는 매출이 있는 회사에서 작성될 확률이 높습니다. 혹은 그러한 경각심과 중요성을 아는 리더가 있는 곳에서 가능합니다. 모두들 중요하다 생각하지만, 성장하는 스타트업, 손익분기점이 넘지 못하고 투자를 단기간안에 받아 성장되어야 할 회사에서는 성과로 인정받을 수 있는 문화가 아직 문화로서 쉽게 정착되지 못하는 것 같습니다. 중요한 것은, 시간이 지나면 모든 회사가 테스트코드를 작성한다는 것입니다. 그렇다면 일찍부터 작성할 수 있는 문화를 만드는 것이 중요할 것 같습니다.</p>\n<p>현재 저희 회사에서도 스트리머 플랫폼에서 생기는 매출이 존재하여 다른 플랫폼 개발에 테스트코드를 작성하는 문화가 자리잡혀있습니다. 초기에는 그렇지 못했다고 들었습니다.</p>\n<ul>\n<li><a href=\"https://medium.com/@aeh.herman/first-steps-in-frontend-testing-with-tdd-bdd-7ddab8796ad6\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">First-steps-in-frontend-testing</a></li>\n</ul>\n<h2 id=\"2-디자인-패턴을-얼마나-실천하고-있나요\"><a href=\"#2-%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4%EC%9D%84-%EC%96%BC%EB%A7%88%EB%82%98-%EC%8B%A4%EC%B2%9C%ED%95%98%EA%B3%A0-%EC%9E%88%EB%82%98%EC%9A%94\" aria-label=\"2 디자인 패턴을 얼마나 실천하고 있나요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 디자인 패턴을 얼마나 실천하고 있나요?</h2>\n<p>디자인패턴은 제가 프론트엔드를 담당하다보니 많이 보이진 않았습니다. 그래도, 디자인패턴을 많이 볼 수 있는 곳이 리팩토링 과정에서의 모듈화 부분에서 볼 여지가 큰데, 아쉽게도 모듈화하는 웹 팀을 제가 아직 못 보았습니다. 프론트엔드는 현재 라이브러리를 기준으로 개발이 많이 진행되기에 state와 관련한 패턴이나, 함수형 패러다임에 많이 집중되는 것 같습니다. 이러한 것에서 아쉬운것은 npm에 패키징을 이용해서 모듈화하는 회사를 많이 보지 못했습니다. github를 통해 npm에 쓰는 회사는 몇몇 보이긴 합니다.</p>\n<h2 id=\"3-회사-단위로-정립된-혹은-추천하는-디버깅-방법론이-있나요\"><a href=\"#3-%ED%9A%8C%EC%82%AC-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EC%A0%95%EB%A6%BD%EB%90%9C-%ED%98%B9%EC%9D%80-%EC%B6%94%EC%B2%9C%ED%95%98%EB%8A%94-%EB%94%94%EB%B2%84%EA%B9%85-%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%9D%B4-%EC%9E%88%EB%82%98%EC%9A%94\" aria-label=\"3 회사 단위로 정립된 혹은 추천하는 디버깅 방법론이 있나요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 회사 단위로 정립된, 혹은 추천하는 디버깅 방법론이 있나요?</h2>\n<p>디버깅 방법론은 개발자의 역량과 연관이 있는 것 같습니다. 그 역량들을 전사적으로 끄집어 낼 수 있는 교육 혹은 공유 세션이 마련되냐가 중요한 포인트 인것 같습니다. 구글에 몇번만 검색해도 구글 개발자 도구에 대한 강의 및 좋은 글들이 많습니다. 최근에 리디북스나, 다른 몇몇 회사에서는 그러한 정보들이 보였던것 같습니다. 그러한 글을 참조하면 좋을 것 같습니다. </p>\n<p>개인 적으로디버깅도 좋지만 테스트코드를 통한 커버리지를 높이는게 더 큰 가치가 있고 도움이 될 것이라고 생각합니다.</p>\n<h2 id=\"4-스프린트-스크럼-등의-방법론을-사용하나요-어느-상황에-어떤-기간에-왜-어떻게-사용하나요\"><a href=\"#4-%EC%8A%A4%ED%94%84%EB%A6%B0%ED%8A%B8-%EC%8A%A4%ED%81%AC%EB%9F%BC-%EB%93%B1%EC%9D%98-%EB%B0%A9%EB%B2%95%EB%A1%A0%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%82%98%EC%9A%94-%EC%96%B4%EB%8A%90-%EC%83%81%ED%99%A9%EC%97%90-%EC%96%B4%EB%96%A4-%EA%B8%B0%EA%B0%84%EC%97%90-%EC%99%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%82%98%EC%9A%94\" aria-label=\"4 스프린트 스크럼 등의 방법론을 사용하나요 어느 상황에 어떤 기간에 왜 어떻게 사용하나요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 스프린트, 스크럼 등의 방법론을 사용하나요? 어느 상황에, 어떤 기간에, 왜, 어떻게 사용하나요?</h2>\n<p>위 방법론들은, 일정관리와 개발자들의 집중을 위해 생겨난 방법론이라고 생각합니다. 제가 다닌 회사 모두 스프린트, 스크럼을 이용하여 주단위로 끊었습니다. 1주일, 3개월 등의 단위로 많이 끊어서 성과를 측정합니다.</p>\n<p>위 방법 모두 애자일한 방식으로서 빠르게 feature를 생산하는 목적을 가지고 있습니다. 가장 큰 문제 혹은 보완점은, feature의 정의와 범위를 올바르게 정하는 것이 중요하다고 생각합니다. feature의 완성기준과 테스트코드 혹은 문서로서 정의가 올바르게 되어있지 않다면, 위에서 물어보셨던, 1,2번에 대한 고민이 코드에서 엿보이기 어렵다고 생각합니다. 이 문제는 5번 페어프로그래밍에 대한 문화가 얼마나 맹목적인 과정을 만드는지도 느낄 수 있습니다.</p>\n<ul>\n<li><a href=\"https://www.simplilearn.com/scrum-project-management-article\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Scrum Project Management – Pros and Cons</a></li>\n</ul>\n<h2 id=\"5-페어프로그래밍을-실천하나요-어느-상황에-어떤-기간에-왜-어떻게-실천하나요\"><a href=\"#5-%ED%8E%98%EC%96%B4%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%9D%84-%EC%8B%A4%EC%B2%9C%ED%95%98%EB%82%98%EC%9A%94-%EC%96%B4%EB%8A%90-%EC%83%81%ED%99%A9%EC%97%90-%EC%96%B4%EB%96%A4-%EA%B8%B0%EA%B0%84%EC%97%90-%EC%99%9C-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%8B%A4%EC%B2%9C%ED%95%98%EB%82%98%EC%9A%94\" aria-label=\"5 페어프로그래밍을 실천하나요 어느 상황에 어떤 기간에 왜 어떻게 실천하나요 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 페어프로그래밍을 실천하나요? 어느 상황에, 어떤 기간에, 왜, 어떻게 실천하나요?</h2>\n<p>페어프로그래밍, 문화적으로 갖고있는 회사도 많고 실질적으로 사용한다고는 하나, 빈도와 정도에 물어보면 거의 모든회사가 생각보다 잘 진행되지 않는다고 보고 있습니다.\n하지만 빈도가 중요한 것이 아니라, 페어프로그래밍을 통해 목적을 잘 달성할 수 있냐가 핵심이어야 될것 같습니다. 제 개인적인 포인트는 <code class=\"language-text\">목적에 대한 정의, 그리고 문제 해결에 대한 증명 과정</code>이 잘 이루어지는 것이라고 생각합니다. 앉아서 페어프로그래밍이 아니라, 우리가 정말 어떠한 목적을 달성하기 위해 토론하고 나누는 것이 글로 적혀있으면 가장 도움이 많이 되는 것 같습니다. 페어프로그래밍이 끝나고, 그 글을 다시 확인하면서 달성했는지 못했는지도 확인할 수 있습니다.</p>\n<ul>\n<li><a href=\"https://www.acquaintsoft.com/pair-programming-good-bad-ugly/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Pair Programming, The Good, The Bad, The Ugly</a></li>\n</ul>\n<h2 id=\"outro\"><a href=\"#outro\" aria-label=\"outro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Outro</h2>\n<p><code class=\"language-text\">가장 중요한 것은 전사 OKR을 통해 성과를 정의하고, 이에 맞게 성과와 개발문화를 정착시키는 것이 중요하다는 것이 제 결론</code>입니다. 즉, 방향을 회사도 모르고 리더, 개인도 모르는데, 이를 계속 이끌어가야 한다는 것은 거의 판도라에 가깝다고 생각합니다. 그러한 권한이 개인들에게 존재하며, 팀으로서 성장에 대한 성과를 인정해준다면 도움이 될것 같습니다.</p>\n<p>몇몇 지인들과 얘기하였을 때, 이러한 회사들이 꾀 있으며, 이러한 회사들은 매출이 있기 때문에, 화려하거나 유별나게 무언가를 하지 않는다는 사실을 알았습니다. 이러한 회사들의 특징은, 복지와 성과 나머지 기타적인 것들도 수치적으로 정의되어 제공된다는 것입니다. 예를 들어, 성과금을 준다가 아니라, 연봉 10% 성과금을 준다 등에 다른 회사보다 수치적인 것이죠. 아마 이러한 수치적으로 조금씩 정의해나가며 성장하는 회사가 위의 질문(문제)들을 더 피부로 느끼고 해결하기 위해 노력하는 회사라고 생각합니다.</p>\n<hr>\n<p>아마 제 체크리스트입니다. 이러한 질의응답을 할 기회도 생각보다 많지는 않지만, 이러한 질문을 통해서 적어도 회사에서 어떻게 개발하는지를 예전보다 많이 알 수 있었습니다.\n불합격을 하든, 합격을 하든 그 회사를 가는것은 본인의 의지일 것입니다. 하지만, 적어도 기준이 있으면 좋겠다는 생각으로 만들었습니다.</p>\n<p>6개월 전에 작성된 체크리스트라서, 현재 제 눈에도 많이 개선되어야 할것이 보이지만, 공유드려봅니다.</p>\n<h2 id=\"interview-checklist-about-interviewees-company\"><a href=\"#interview-checklist-about-interviewees-company\" aria-label=\"interview checklist about interviewees company permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interview CheckList about Interviewee's Company</h2>\n<ul>\n<li>Date :</li>\n<li>Company Name :</li>\n</ul>\n<p>FrontEnd 면접에 필요한 정보를 기록하고 이를 점수화하여 나와 회사가 매칭되는지를 스스로 체크하기 위하여 작성되었습니다.</p>\n<p>총 배점은 100점이며, 기술 70점과 문화 30점을 부여하였습니다.</p>\n<h3 id=\"frontend-tech-checklist---70점\"><a href=\"#frontend-tech-checklist---70%EC%A0%90\" aria-label=\"frontend tech checklist   70점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FrontEnd Tech CheckList - 70점</h3>\n<h4 id=\"js-20점\"><a href=\"#js-20%EC%A0%90\" aria-label=\"js 20점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JS (20점)</h4>\n<ul>\n<li>\n<p>자바스크립트의 코드 스타일은 어떻게 유지하고 있는가? - 10점</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> EsLint</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> Prettier</li>\n<li>...</li>\n</ul>\n</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> JavaScript의 Type에 대해서 어떻게 생각하는가? - 10점</p>\n<ul>\n<li>JavsScript와 TypeScript에 대한 견해 묻기</li>\n<li>React라면 PropType에 대한 견해 묻기</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"process-20점\"><a href=\"#process-20%EC%A0%90\" aria-label=\"process 20점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Process (20점)</h4>\n<ul>\n<li>\n<p>잘못된 코드가 반영되었다면, 이를 어떻게 해결하고 계신지? - 10점</p>\n<ul>\n<li>문제의 원인을 깊게 확인해보는지와 그러한 시간과 비용을 고려하는지에 대한...</li>\n<li>테스트 코드를 작성하고 계신지?</li>\n<li>릴리즈의 조건은 무엇인지?</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 브랜치 전략은 무엇이며?, CI/CD는 어떻게 구성하여 운영하고 있는지? - 5점</li>\n<li class=\"task-list-item\">\n<p><input type=\"checkbox\" disabled> 코드의 직관성과 성능에 대해서 어떠한 것을 더 중요하게 생각하시는지? - 5점</p>\n<ul>\n<li>중요도에 대해서 수치로 표현해주실 수 있으신지?</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"frontend-30점\"><a href=\"#frontend-30%EC%A0%90\" aria-label=\"frontend 30점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FrontEnd (30점)</h4>\n<ul>\n<li>FrontEnd란 무엇이며, 현재 뽑고자 하는 개발자에게 무엇을 원하는지에 대해 설명해주실 수 있는지 - 10점</li>\n<li>Frontend가 일을 체계화하기 위한 전략이 무엇을 갖고 계신지? - 10점</li>\n<li>\n<p>스타일시트를 어떻게 관리하고 있는가? - 5점</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 표기법</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 파일 관리</li>\n</ul>\n</li>\n<li>\n<p>Component와 Container에서 Style은 어떻게 관리하는지? - 5점</p>\n<ul>\n<li>JS와 CSS와의 표현을 통한 한계점에 대해서 어떻게 느끼는지?</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"culture-checklist---30점\"><a href=\"#culture-checklist---30%EC%A0%90\" aria-label=\"culture checklist   30점 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Culture CheckList - 30점</h3>\n<ul>\n<li>\n<p>일이 진행되는 프로세스에 대해서 자세히 묻기 - 20점</p>\n<ul>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 문제 정의에 대해서 - 10점</li>\n<li>문제를 사전에 식별하였을 경우</li>\n<li>문제를 사전에 식별하지 못했을 경우</li>\n<li>중간에 예상치 못한 문제가 식별된 경우</li>\n<li>...</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 문제 해결에 대한 일정 산출은 어떻게 진행되는지 - 5점</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 문제 해결이 무엇이며, 문제가 해결되었다는 기준은 어떻게 결정되는지 - 5점</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 성과란 무엇이며, 성과없는 노력은 인정받아야된다고 생각하는지 토론해보기. - 5점</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 휴가 사용은 어떻게되는지? - 5점</li>\n</ul>","id":"99611160-d982-59cf-80af-661c9e255f18","fields":{"slug":"지인-개발자의-질문-okr은-무엇보다도-중요하고-중요하다"},"frontmatter":{"title":"지인 개발자의 질문, OKR은 무엇보다도 중요하고 중요하다","date":"2019-08-11T00:00:00.000Z","author":"Seolhun","subTitle":null,"banner":"/assets/covers/logo.png","category":"Story","tags":["how to","QNA","OKR","goal"]},"timeToRead":7},{"excerpt":"문제란 무엇인가? 우리는 정말로 문제를 올바르게 바라보고 있는가? Intro…","html":"<h2 id=\"문제란-무엇인가\"><a href=\"#%EB%AC%B8%EC%A0%9C%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80\" aria-label=\"문제란 무엇인가 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제란 무엇인가?</h2>\n<p>우리는 정말로 문제를 올바르게 바라보고 있는가?</p>\n<h2 id=\"intro\"><a href=\"#intro\" aria-label=\"intro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Intro</h2>\n<p>개발자는 항상 문제와 마주한다. 개발의 시작부터 끝이 나서도 개발자는 끊임없이 문제와 마주한다. 그런데도 항상 문제를 해결하는 데에는 왜 그렇게 힘이 드는 것일까?</p>\n<p>이러한 부분은 환경적인 부분이 클 수도 있다. 대한민국 대부분의 사람들은 어릴 때부터 객관식 문제만을 바라보며 성장해온다. 하지만, 삶에 있어서 대부분의 문제는 선택지가 없는 문제가 태반이며, 혹시라도 정답지가 있어도 정답이 아닐 경우가 대다수이다. 그렇다면 우리는 이렇게 복잡한 세상 속에서 문제를 어떻게 풀어나가야 할지 조금 막막해진다. 그러한 막막함으로 인해 문제가 더 어렵게 느껴지는 경우가 다수이다. 그렇다면 어떻게 문제를 조금이라도 쉽게 접근할 수 있을까?</p>\n<p>개발을 통해 문제에 대해 바라보는 시각을 스스로 반성하며, 이를 좀 더 체계적으로 나눠보았다. 다양한 경험에서 배운것일 수도 누군가에게 가르침을 받은 것일수도 혹은 의식적이든 무의식적이든 이러한 필요성을 인지하고 노력했는지도 모른다. 그래서 어떻게 보면 지극히 주관적일 수 있지만, 개인적으로 대부분 문제는 이와 같은 방법으로 해결할 수 있었기에 짧게나마 적어보고자 한다. 개인적으로 이 문제에 대한 방법의 키워드는 3가지이다.</p>\n<h2 id=\"--keywords\"><a href=\"#--keywords\" aria-label=\"  keywords permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Keywords</h2>\n<ol>\n<li>Scope</li>\n<li>Definition</li>\n<li>Action</li>\n</ol>\n<h2 id=\"--pre-condition\"><a href=\"#--pre-condition\" aria-label=\"  pre condition permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>- Pre-condition</h2>\n<ol>\n<li>세상에 바꿀 수 있는 것은 <code class=\"language-text\">나</code>뿐이다.</li>\n<li>이해라는 것은, 항상 주관적인 오해의 소지를 갖고 있다.</li>\n<li>시간이라는 변수에 따라 달라질 수 있다.</li>\n</ol>\n<h2 id=\"1-scope\"><a href=\"#1-scope\" aria-label=\"1 scope permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Scope</h2>\n<p>제일 먼저, <code class=\"language-text\">문제의 범위</code>에 대해서 생각해봐야 한다. 거시적이냐 미시적이냐에 따라 문제를 바라보는 시각이 다르겠지만, 대부분 문제는 거시적으로 시작하여 미시적으로 발생되기 때문이다. 이러한 상황에서 문제를 1차원적으로 보는 것은 문제를 해결하는데 큰 도움이 되지 않는다. 그러므로, 문제의 범위를 언급한 이유는 <code class=\"language-text\">문제의 다차원성을 고려하기 위함</code>이다.</p>\n<p>프론트엔드 개발자로 근무하면서, 대부분의 커뮤니티에 참여하면 많은 사람들이 <code class=\"language-text\">디자이너와 개발자 간의 협업</code>이라는 주제를 많이 언급한다. 참 흥미로운 주제이면서 어려운 문제이다. 그렇지만 이 문제 또한 문제의 범위를 먼저 생각해봐야 한다. 현재 사람들이 협업이 되지 않는 이유는 하나의 작은 부분 혹은 (이익)에 집착하는 경향이 짙기 때문이다. 예를 들어,  디자이너와 프론트엔드의 문제가 발생되는 대부분의 경우가, 1px, 아니 0.1px의 오차로 인해 발생된다. 이러한 문제는 솔직히 얘기하면 디자이너와 프론트 엔드 개발자 모두에게 간과해서는 안될 문제이다. 하지만, 이러한 CSS 혹은 HTML 등의 간단한 수정을 통해 간단하게 해결해야 할 문제라고 말하는 것은 문제의 범위에 대한 치명적인 오류를 범하는 것이다. 우리는 이 문제를 쉽게 해결할 수 있지만, 이 문제를 바로 해결하는 것보다 문제의 범위를 정의하고 문제의 근원을 심도있게 찾아보아야 한다.</p>\n<p>어떻게 하면, 문제의 근원을 찾을 수 있을까? 자바스크립트에서는 해당 객체를 찾지 못하면 Window 객체까지 나아가 해당 객체를 탐색한다. 정말 없으면 해당 객체 선언이 문제가 되는데, 이러한 방법처럼 우리는 끊임없이 범위를 확장시키며 연관된 문제를 찾아야 한다. </p>\n<p>그러나, 대부분의 사람들이 문제의 범위를 디자이너 혹은 개발자의 문제로 한정시켜버린다. 아쉽게도 정말 그런경우가 많다. 하지만, 디자이너와 프론트엔드는 개발이라는 상위 계층에 하위에 속해있다. 그러므로, 이는 개발이라는 관점에서 문제를 어떻게 해결할지에 대한 방법이 깊게 정의되지 못한 탓이 크다. 개발 보다 상위에 있는 것이 떠오르지 않지만, 개발보다 상위의 무엇인가 연관된 문제를 발견할 수 있다면, 그 문제를 해결하지 못해 지금의 문제를 마주하였을 경우가 매우 높다. 그렇기에 <code class=\"language-text\">문제의 범위를 항상 재정의해야 한다.</code> 지금 당장의 이 문제를 해결하기만 하는 것은 근원적인 문제를 해결하지 못한다. 그러므로, 1px이 나타나지 않게 Style을 구조화하든 Component 외에 사용을 금지하는 등의 여러가지 방법을 고안해야 한다. 그 후에 미시적으로 따르지 않는 개인, 혹은 불평이 생기는 부분들을 조금씩 수정해 나가야만 한다.</p>\n<p>위 얘기처럼 되기는 쉽지 않다. 왜냐하면 대부분의 조직은 항상 시간이라는 물리적인 제한 속에 있기 때문이다. 그래서, 시간이란 변수에 따라 달라질 수 있다는 전제조건을 걸 수 밖에 없었다. 그렇지만, 시간과 상관없이 해당 문제의 범위를 올바르게 분리하고 올바르게 정의한다면 시간과 상관없는 방향성에 대한 좋은 해결책을 내릴 수 있다고 생각한다. 힘들겠지만, <code class=\"language-text\">개발은 항상 이상적인 방향으로 나아가야함을 믿는다.</code></p>\n<h2 id=\"2-definition\"><a href=\"#2-definition\" aria-label=\"2 definition permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Definition</h2>\n<p>두번째로 중요한 것은 <code class=\"language-text\">정의</code>라고 생각한다. 1장도 범위를 정의하는 것 같은데 2장에서 또 정의라고 하니 무슨 반복적인 말인가 싶을 수 있다. 하지만 이번 내용은 전제조건의 2번째에 해당되는 정의에 속한다.</p>\n<p>대부분의 사랃들은 이해했다는 표현을 주로 사용한다. 하지만, 일을 진행하면 할 수록 이해했다는 말처럼 모호한 표현이 있을까 싶다. 그러한 이유는 같은 것을 바라보는 시각이 달라도 이해했다는 표현을 사용할 수 있다는 여지가 있기 때문이다. 예를 들어보자. 1 + 1 * 3 = 4를 보고, 어떠한 사람은 덧셈과 곱셈 그리고 사칙연산의 우선순위를 이해했다고 표현하고, 어떠한 사람은 해당 연산이 4라는 답을 이해했다라고 말할 수 있다.\n이 둘의 차이는 덧셈과 곱셈, 사칙연산의 우선순위를 이해하고 있는지, 혹은 사칙연산을 통해 4라는 값을 잘 계산하며 이를 이해하고 증명할 수 있는지 등의 여러가지 경우를 가질 수 있다. 즉, 1 + 1 * 3 = 4라는 것이 문제가 아니라, 사칙연산과 우선순위를 정확히 이해하고 있는가? 그래서 4를 증명할 수 있는가?라는 구체적인 문제에 대한 정의가 필요하다.</p>\n<p>이러한 간단한 예로는 많은 경우를 대변할 수 없겠지만, 우리 대부분은 이렇게 간단한 문제로 제대로 정의하지 않고 접근하는 경우가 태반이다. 문제를 정의함에 있어 문제에 대한 다양한 해석에 대해 항상 주의하고 경계해야 한다. 당연히 어느 정도의 가능성은 항상 있을 수 밖에 없다. 하지만, 그 만큼 이를 줄이고자 항상 노력해야 한다. 1도의 각이 현재는 가까이 보여도, 길게 보면 그 차이가 더 크게 벌어짐을 알 수 있다. 현재는 작을지라도 나중을 위해서라도 우리는 항상 용어정의부터 다양한 의미의 해석이 생길 수 있는 부분을 미연에 방지해야 한다. 그러므로, <code class=\"language-text\">문제를 항상 보수적으로 생각하고, 잘게 쪼개서 정의를 내려야 한다. 그리고 서서히 확장시켜야 한다.</code> </p>\n<h2 id=\"3-action\"><a href=\"#3-action\" aria-label=\"3 action permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Action</h2>\n<p>마지막으로, 범위를 정하고 문제를 올바르게 정의를 내렸으면, 어떻게 해결할지에 대한 <code class=\"language-text\">조치</code>가 필요하다. 3번째로 Action의 영역을 둔 것은 범위와 정의에 따라 각각의 Action을 나누어야 되기 때문이다. 간단하게, 프론트엔드 팀은 당장 1px의 오류를 줄이고 반영해야 하며, 범위를 확장시켜 이러한 문제가 발생되지 않게 개발 문화에 대한 정의를 빠르게 정의/변경해야 한다. 디자이너는 또한 이러한 상황을 인지하고 1px이 왜 발생되었는지에 맞추어 디자인을 재정의해야 한다. 각각의 문제에 범위와 정의 따른 조치를 내려야 한다. 절대 문제는 상당히 고차원적인 모호함을 갖고 있기 때문이다. 그러므로 우리는 항상 모든 방면을 고려해야한다. 문제를 해결할 때는 오직 논리와 책임을 확실히 정의하여 접근해야만 한다. 근거와 책임이 없으면 모든 문제에 대한 근거가 쉽게 무너질 수 있기 때문이다. 그렇다고 잘못된 것을 끝까지 붙잡고 있는 과오를 범하지는 말자. <code class=\"language-text\">우리는 항상 조치를 위한 문제의 정의와 관련한 부분에서 끊임없는 노력과 시간을 투자해야한다.</code></p>\n<p>아쉽게도 이러한 노력에도 불구하고 조치가 실패할 수 있음을 인지하고 있어야 한다. 문제에 대한 정의가 올바르다고하여 모든 조치가 올바르게 작동 될만큼 세상은 그렇게 호락하지 않다. 그럼에도 문제에 대한 올바른 정의가 이루어져 있다면 모든 액션이 같은 방향으로 나아가고 있음을 서로가 신뢰할 수 있다. 그러므로 <code class=\"language-text\">우리는 빠르게 문제에 대한 올바른 조치를 찾아야 한다.</code> 그렇다면 우리는 대부분의 문제를 올바르고 신속하게 해결할 수 있다고 믿는다.</p>\n<p><img src=\"/assets/covers/answer.png\" alt=\"Answer\"></p>\n<h2 id=\"outro\"><a href=\"#outro\" aria-label=\"outro permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Outro</h2>\n<p>개인의 생각을 정리한 글로서 많은 부분이 부족할 수 있습니다. 하지만, 개인적으로 느꼈던 감정과 현재의 상황들을 해결하고자 정리해보았습니다. 위 글에서 가장 최근에 느끼는 것은 문제의 다차원성입니다. 1개의 문제는 절대 개인이나 하나의 조직만이 해결할 수 없을 정도로 다양한 스펙트럼을 갖고 있습니다. 또한, 다양한 스펙트럼으로 인해 문제에 대한 열린 사고와 자세를 갖추지 않으면 이를 올바르게 볼 수 없다는 것입니다. 특히, 정답이 바로 앞에 있음에도 불구하고 이를 인지하지 못할 경우가 혹은 인정하지 못하는 경우가 많이 있습니다. 이러한 제한된 시간 안에서 빠르고 올바르게 접근하기 위한 생각을 정리해보는 시간을 가져보았습니다.</p>","id":"47d3310b-32a6-5fdb-9f8b-14c463de5467","fields":{"slug":"story-문제란-무엇인가-어떻게-문제를-바라봐야할-것인가"},"frontmatter":{"title":"[Story] 문제란 무엇인가? 어떻게 문제를 바라봐야할 것인가?","date":"2018-09-09T00:00:00.000Z","author":"Seolhun","subTitle":"","banner":"/assets/covers/logo.png","category":"Story","tags":["story","solution","retrospect","definition","dicision","정의","결정","develop","developer"]},"timeToRead":4}],"categoryName":"Story"}}}