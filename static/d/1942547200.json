{"data":{"allMarkdownRemark":{"totalCount":67,"edges":[{"node":{"fields":{"slug":"ts-typescript로-reactive한-form-group-builder-만들어보기-part-1"},"frontmatter":{"title":"[TS] Typescript로 Reactive한 FormGroup Builder 만들어보기 - Part 1","date":"2020.09.25","category":"TS","tags":["TS","Form","FormGroup"],"banner":"/assets/covers/typescript.png"},"excerpt":"Intro 개인적으로 Typescript를 상당히 애용합니다. Bundler와 같이사용하면, Javascript에 다양한 모듈을 만들어 줄 수 있으며, 타입을 명시해줌으로써 함수와 객체에 대한 정의를 더 쉽게 할 수 있기 때문입니다.\n당연히 기존 Script의 언어 장점을 잃어버리는 측면도 있습니다. 하지만, 이미 번들러를 통해서 ES5까지 호환할 수 있는 스크립트를 만들 수 있으며, TS-Compiler를 통해서 사전에 코드 에러를 방지할 수 있습니다. ts-es6.png 또한, 워낙 위처럼 유명한 이미지처럼, Typescript…","timeToRead":8}},{"node":{"fields":{"slug":"js-javascript로-reactive한-form-group-builder-만들어보기-part-1"},"frontmatter":{"title":"[JS] Javascript로 Reactive한 FormGroup Builder 만들어보기 - Part 1","date":"2019.09.25","category":"TS","tags":["JS","Form","FormGroup"],"banner":"/assets/covers/typescript.png"},"excerpt":"Intro 웹 개발을 하다보면 가장 많이 사용되는 기능은 Form이라고 생각합니다.\n대부분의 웹 사이트에 방문하면 회원가입과 로그인이 없는 사이트는 거의 없을 것이며, 최소한 고객문의와 Contact 등에 대한 페이지는 어느 사이트에서나 필요하기 때문입니다. 그렇다면, 개발자로서 이렇게 많이 사용되는 Form을 구현하기 위해서는 어떻게 접근하는 것이 가장 좋을까요?\n이러한 질문을 던져보면, Form을 자동화할 수 있는 Module을 만드는 것이 가장 좋을 것입니다. 그 중에서도 React, Vue, Agnular…","timeToRead":9}},{"node":{"fields":{"slug":"지인-개발자의-질문-okr은-무엇보다도-중요하고-중요하다"},"frontmatter":{"title":"지인 개발자의 질문, OKR은 무엇보다도 중요하고 중요하다","date":"2019.08.11","category":"Story","tags":["how to","QNA","OKR","goal"],"banner":"/assets/covers/logo.png"},"excerpt":"Intro 아는 지인분에게 아래와 같은 질문을 받았습니다. 참으로 어려운 질문이었습니다. 피부로 느낀것도 많고, 생각은 많았지만 정말 생각하고 누군가에게 전달할 만큼의 공감이되었는지, 스스로 위 질문에 대해서 실천하고 있는지에 대한 회고시간이 필요하다고 느꼈기 때문입니다. 결론을 얘기하면, 저도 너무 부족하여 같이 실천했으면 좋겠고, 이러한 것이 아쉬웠고 같이 해결해나갔으면 좋겠다는 방향으로 의견을 공유해주었습니다.\n그러한 답변을 주는데도 한달이 넘게 지연되다가 마음의 결단을 먹고 3…","timeToRead":7}},{"node":{"fields":{"slug":"js-functional-currying으로-알아보는-functional-programming"},"frontmatter":{"title":"[JS/Functional] Currying으로 알아보는 Functional Programming","date":"2018.11.09","category":"JS","tags":["JS","Functional","Currying"],"banner":"/assets/covers/js.png"},"excerpt":"What is currying 은 함수를 하나의 인수로 취하여 일련의 함수로 분해하는 프로세스입니다. sum3은 하나의 함수에 1개의 argument를 받아서 처리하는 함수입니다. 더 나아가보겠습니다. 그에 반하여 sumFn3은 js의  특징을 이용하여 3개의 argument를 받아서 3개의 함수로 처리하는 함수입니다.\n이러한 함수들은 이 되었다는 표현을 사용합니다. Curry Wrapper 먼저 위의 함수를 curry로 사용할 수 있게 만들어봅니다.  함수를 계속 return 하면서 각각의 함수에 존재하는 argument…","timeToRead":2}},{"node":{"fields":{"slug":"story-문제란-무엇인가-어떻게-문제를-바라봐야할-것인가"},"frontmatter":{"title":"[Story] 문제란 무엇인가? 어떻게 문제를 바라봐야할 것인가?","date":"2018.09.09","category":"Story","tags":["story","solution","retrospect","definition","dicision","정의","결정","develop","developer"],"banner":"/assets/covers/logo.png"},"excerpt":"문제란 무엇인가? 우리는 정말로 문제를 올바르게 바라보고 있는가? Intro…","timeToRead":4}}]}}}